{"version":3,"file":"static/js/385.fc13d912.chunk.js","mappings":"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","sources":["components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { RealBankAccount, UPIApp, Investment, Goal } from '../types';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  LinearProgress,\r\n  Container,\r\n  Chip,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Avatar,\r\n  Alert,\r\n  CircularProgress,\r\n  Badge,\r\n  Menu,\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  Switch,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Smartphone,\r\n  Phone,\r\n  AccountBalance,\r\n  Assessment,\r\n  CheckCircle,\r\n  Category,\r\n  Search,\r\n  Mic,\r\n  FilterList,\r\n  Warning,\r\n  EmojiEvents,\r\n  NotificationsActive,\r\n  Subscriptions,\r\n  CalendarMonth,\r\n  Schedule,\r\n  ReceiptLong,\r\n  PsychologyAlt,\r\n  Speed,\r\n  TrendingUp as TrendingUpIcon,\r\n  Add as AddIcon\r\n} from '@mui/icons-material';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  // State management with localStorage persistence\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [voiceSearch, setVoiceSearch] = useState(false);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(() => \r\n    localStorage.getItem('dashboard-category') || 'all'\r\n  );\r\n  const [goalDialogOpen, setGoalDialogOpen] = useState(false);\r\n  const [subscriptionMenuAnchor, setSubscriptionMenuAnchor] = useState<null | HTMLElement>(null);\r\n  const [dateFilter, setDateFilter] = useState(() => \r\n    localStorage.getItem('dashboard-date-filter') || 'all'\r\n  );\r\n  const [amountRange, setAmountRange] = useState<{ min: string; max: string }>(() => \r\n    JSON.parse(localStorage.getItem('dashboard-amount-range') || '{\"min\": \"\", \"max\": \"\"}')\r\n  );\r\n  const [showAnomaliesOnly, setShowAnomaliesOnly] = useState(() => \r\n    localStorage.getItem('dashboard-show-anomalies') === 'true'\r\n  );\r\n  const [filteredTransactions, setFilteredTransactions] = useState<any[]>([]);\r\n  const [recognition, setRecognition] = useState<any>(null);\r\n  \r\n  // Bank and UPI state management with localStorage persistence\r\n  const [connectedBankAccounts, setConnectedBankAccounts] = useState<RealBankAccount[]>([]);\r\n  const [connectedUPIApps, setConnectedUPIApps] = useState<UPIApp[]>([]);\r\n  const [showSmartBudgetPopup, setShowSmartBudgetPopup] = useState(false);\r\n  \r\n  // Investment tracking state\r\n  const [investments, setInvestments] = useState<any[]>([]);\r\n  const [portfolioValue, setPortfolioValue] = useState(0);\r\n  const [portfolioGain, setPortfolioGain] = useState(0);\r\n  \r\n  // Goals state management with localStorage persistence\r\n  const [goals, setGoals] = useState<Goal[]>(() => {\r\n    const savedGoals = localStorage.getItem('finsense_goals');\r\n    return savedGoals ? JSON.parse(savedGoals) : [\r\n      { \r\n        id: 1,\r\n        name: 'Dream Home', \r\n        saved: 1500000, \r\n        target: 5000000, \r\n        percentage: 30,\r\n        aiRecommendation: 25000,\r\n        timeline: '8 years 4 months'\r\n      },\r\n      { \r\n        id: 2,\r\n        name: 'Emergency Fund', \r\n        saved: 300000, \r\n        target: 500000, \r\n        percentage: 60,\r\n        aiRecommendation: 15000,\r\n        timeline: '1 year 2 months'\r\n      }\r\n    ];\r\n  });\r\n  \r\n  // New goal form state\r\n  const [newGoal, setNewGoal] = useState({\r\n    name: '',\r\n    target: '',\r\n    saved: ''\r\n  });\r\n  \r\n  // Bank addition dialog state\r\n  const [bankDialogOpen, setBankDialogOpen] = useState(false);\r\n  const [newBankAccount, setNewBankAccount] = useState({\r\n    bankName: '',\r\n    accountNumber: '',\r\n    accountType: 'Savings' as 'Savings' | 'Current',\r\n    balance: ''\r\n  });\r\n  \r\n  // UPI addition dialog state\r\n  const [upiDialogOpen, setUpiDialogOpen] = useState(false);\r\n  const [newUPIApp, setNewUPIApp] = useState({\r\n    name: '',\r\n    upiId: ''\r\n  });\r\n  \r\n  // Real-time transaction state\r\n  const [recentTransactions, setRecentTransactions] = useState<any[]>([]);\r\n  const [totalBalance, setTotalBalance] = useState(0);\r\n  \r\n  // Notification state\r\n  // const [notifications, setNotifications] = useState<any[]>([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  // Load persisted data on component mount\r\n  useEffect(() => {\r\n    // Load bank accounts from localStorage\r\n    const savedBankAccounts = localStorage.getItem('connected-bank-accounts');\r\n    if (savedBankAccounts) {\r\n      setConnectedBankAccounts(JSON.parse(savedBankAccounts));\r\n    } else {\r\n      // Initialize with demo bank account\r\n      const demoBankAccount: RealBankAccount = {\r\n        id: 'sbi-001',\r\n        bankName: 'State Bank of India',\r\n        accountNumber: '****1234',\r\n        accountType: 'Savings',\r\n        balance: 45630,\r\n        isConnected: true,\r\n        lastSyncTime: new Date()\r\n      };\r\n      setConnectedBankAccounts([demoBankAccount]);\r\n      localStorage.setItem('connected-bank-accounts', JSON.stringify([demoBankAccount]));\r\n    }\r\n\r\n    // Load UPI apps from localStorage\r\n    const savedUPIApps = localStorage.getItem('connected-upi-apps');\r\n    if (savedUPIApps) {\r\n      setConnectedUPIApps(JSON.parse(savedUPIApps));\r\n    } else {\r\n      // Initialize with demo UPI apps\r\n      const demoUPIApps: UPIApp[] = [\r\n        { id: 'phonepe-1', name: 'PhonePe', upiId: 'user@phonepe', isConnected: true },\r\n        { id: 'gpay-1', name: 'Google Pay', upiId: 'user@gpay', isConnected: true },\r\n        { id: 'paytm-1', name: 'Paytm', upiId: 'user@paytm', isConnected: true }\r\n      ];\r\n      setConnectedUPIApps(demoUPIApps);\r\n      localStorage.setItem('connected-upi-apps', JSON.stringify(demoUPIApps));\r\n    }\r\n\r\n    // Load investments from localStorage\r\n    const savedInvestments = localStorage.getItem('portfolio-investments');\r\n    if (savedInvestments) {\r\n      setInvestments(JSON.parse(savedInvestments));\r\n    } else {\r\n      // Initialize with demo investments\r\n      const demoInvestments = [\r\n        { symbol: 'RELIANCE', name: 'Reliance Industries', quantity: 25, buyPrice: 2400, currentPrice: 2520, gain: 3000 },\r\n        { symbol: 'TCS', name: 'Tata Consultancy Services', quantity: 15, buyPrice: 3200, currentPrice: 3350, gain: 2250 },\r\n        { symbol: 'INFY', name: 'Infosys Limited', quantity: 30, buyPrice: 1450, currentPrice: 1580, gain: 3900 },\r\n        { symbol: 'HDFC', name: 'HDFC Bank', quantity: 20, buyPrice: 1650, currentPrice: 1720, gain: 1400 }\r\n      ];\r\n      setInvestments(demoInvestments);\r\n      localStorage.setItem('portfolio-investments', JSON.stringify(demoInvestments));\r\n    }\r\n\r\n    // Load recent transactions\r\n    const savedTransactions = localStorage.getItem('recent-transactions');\r\n    if (savedTransactions) {\r\n      setRecentTransactions(JSON.parse(savedTransactions));\r\n    } else {\r\n      // Initialize with demo transactions\r\n      const demoTransactions = [\r\n        { id: 1, description: 'Swiggy Order', amount: -450, type: 'debit', category: 'Food', time: new Date(), method: 'UPI' },\r\n        { id: 2, description: 'Salary Credit', amount: 75000, type: 'credit', category: 'Income', time: new Date(Date.now() - 86400000), method: 'Bank Transfer' },\r\n        { id: 3, description: 'Amazon Purchase', amount: -1299, type: 'debit', category: 'Shopping', time: new Date(Date.now() - 172800000), method: 'Card' },\r\n        { id: 4, description: 'Netflix Subscription', amount: -799, type: 'debit', category: 'Entertainment', time: new Date(Date.now() - 259200000), method: 'UPI' }\r\n      ];\r\n      setRecentTransactions(demoTransactions);\r\n      localStorage.setItem('recent-transactions', JSON.stringify(demoTransactions));\r\n    }\r\n  }, []);\r\n\r\n  // Real-time monitoring and updates\r\n  useEffect(() => {\r\n    // Update portfolio value from investments\r\n    const totalValue = investments.reduce((sum, inv) => sum + (inv.quantity * inv.currentPrice), 0);\r\n    const totalGain = investments.reduce((sum, inv) => sum + inv.gain, 0);\r\n    setPortfolioValue(totalValue);\r\n    setPortfolioGain(totalGain);\r\n\r\n    // Update total balance from bank accounts\r\n    const totalBankBalance = connectedBankAccounts.reduce((sum, acc) => sum + (acc.balance || 0), 0);\r\n    setTotalBalance(totalBankBalance);\r\n\r\n    // Simulate real-time stock price updates\r\n    const stockUpdateInterval = setInterval(() => {\r\n      setInvestments(prevInvestments => {\r\n        const updatedInvestments = prevInvestments.map(inv => {\r\n          const priceChange = (Math.random() - 0.5) * 50; // Random price change\r\n          const newPrice = Math.max(inv.currentPrice + priceChange, inv.currentPrice * 0.9);\r\n          const newGain = (newPrice - inv.buyPrice) * inv.quantity;\r\n          return { ...inv, currentPrice: Math.round(newPrice), gain: Math.round(newGain) };\r\n        });\r\n        localStorage.setItem('portfolio-investments', JSON.stringify(updatedInvestments));\r\n        return updatedInvestments;\r\n      });\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    // Simulate new transactions\r\n    const transactionInterval = setInterval(() => {\r\n      if (Math.random() < 0.3) { // 30% chance of new transaction\r\n        const merchants = ['Zomato', 'Uber', 'Amazon', 'PhonePe', 'Netflix', 'Spotify'];\r\n        const categories = ['Food', 'Transport', 'Shopping', 'Transfer', 'Entertainment'];\r\n        const amounts = [-299, -450, -850, -1200, -199, -99];\r\n        \r\n        const newTransaction = {\r\n          id: Date.now(),\r\n          description: merchants[Math.floor(Math.random() * merchants.length)],\r\n          amount: amounts[Math.floor(Math.random() * amounts.length)],\r\n          type: 'debit',\r\n          category: categories[Math.floor(Math.random() * categories.length)],\r\n          time: new Date(),\r\n          method: Math.random() > 0.5 ? 'UPI' : 'Card'\r\n        };\r\n        \r\n        setRecentTransactions(prev => {\r\n          const updated = [newTransaction, ...prev.slice(0, 9)]; // Keep only 10 recent\r\n          localStorage.setItem('recent-transactions', JSON.stringify(updated));\r\n          return updated;\r\n        });\r\n        \r\n        // Update notification count\r\n        setUnreadCount(prev => prev + 1);\r\n      }\r\n    }, 45000); // Check every 45 seconds\r\n\r\n    return () => {\r\n      clearInterval(stockUpdateInterval);\r\n      clearInterval(transactionInterval);\r\n    };\r\n  }, [investments, connectedBankAccounts]);\r\n\r\n  // Dynamic calculations based on real data\r\n  const totalSpent = Math.abs(recentTransactions.filter(t => t.type === 'debit').reduce((sum, t) => sum + Math.abs(t.amount), 0));\r\n  // Calculate realistic income - dynamic based on credit transactions\r\n  const totalIncome = recentTransactions.filter(t => t.type === 'credit').reduce((sum, t) => sum + t.amount, 0) || 158000;\r\n  const totalTransactions = recentTransactions.length + 98; // Current transactions + historical base\r\n  const topCategory = 'Transfer';\r\n\r\n  // Financial Health Score (0-100)\r\n  const financialHealthScore = 78;\r\n  const healthFactors = {\r\n    savingsRatio: 23, // 23% of income saved\r\n    debtToIncome: 15, // 15% debt ratio (good)\r\n    emergencyFund: 4.2, // 4.2 months expenses covered\r\n    investmentGrowth: 12.5 // 12.5% annual growth\r\n  };\r\n\r\n  // AI Insights Data\r\n  const aiInsights = {\r\n    unusualSpending: {\r\n      category: 'Food',\r\n      amount: 2000,\r\n      comparison: 'more than average'\r\n    },\r\n    personalizedTip: 'Your weekend dining expenses are 40% higher than weekdays',\r\n    futureSpending: {\r\n      category: 'Shopping',\r\n      predicted: 15000,\r\n      month: 'this month'\r\n    }\r\n  };\r\n\r\n  // Add new goal function\r\n  const addNewGoal = () => {\r\n    if (newGoal.name && newGoal.target && newGoal.saved) {\r\n      const targetAmount = parseFloat(newGoal.target);\r\n      const savedAmount = parseFloat(newGoal.saved);\r\n      const percentage = Math.round((savedAmount / targetAmount) * 100);\r\n      const remainingAmount = targetAmount - savedAmount;\r\n      const monthlyRecommendation = Math.max(5000, Math.round(remainingAmount / 24)); // Suggest 2-year timeline\r\n      const timelineYears = Math.ceil(remainingAmount / (monthlyRecommendation * 12));\r\n      const timelineMonths = Math.ceil((remainingAmount % (monthlyRecommendation * 12)) / monthlyRecommendation);\r\n      \r\n      const goal = {\r\n        id: Date.now(),\r\n        name: newGoal.name,\r\n        saved: savedAmount,\r\n        target: targetAmount,\r\n        percentage: percentage,\r\n        aiRecommendation: monthlyRecommendation,\r\n        timeline: `${timelineYears} year${timelineYears > 1 ? 's' : ''} ${timelineMonths} month${timelineMonths > 1 ? 's' : ''}`\r\n      };\r\n      \r\n      const updatedGoals = [...goals, goal];\r\n      setGoals(updatedGoals);\r\n      localStorage.setItem('finsense_goals', JSON.stringify(updatedGoals));\r\n      \r\n      // Reset form\r\n      setNewGoal({ name: '', target: '', saved: '' });\r\n      setGoalDialogOpen(false);\r\n    }\r\n  };\r\n  \r\n  // Add new bank account function\r\n  const addNewBankAccount = () => {\r\n    if (newBankAccount.bankName && newBankAccount.accountNumber && newBankAccount.balance) {\r\n      const bankAccount: RealBankAccount = {\r\n        id: `${newBankAccount.bankName.toLowerCase().replace(/\\s+/g, '')}-${Date.now()}`,\r\n        bankName: newBankAccount.bankName,\r\n        accountNumber: newBankAccount.accountNumber,\r\n        accountType: newBankAccount.accountType,\r\n        balance: parseFloat(newBankAccount.balance),\r\n        isConnected: true,\r\n        lastSyncTime: new Date()\r\n      };\r\n      \r\n      handleConnectBankAccount(bankAccount);\r\n      \r\n      // Reset form\r\n      setNewBankAccount({ bankName: '', accountNumber: '', accountType: 'Savings', balance: '' });\r\n      setBankDialogOpen(false);\r\n    }\r\n  };\r\n  \r\n  // Add new UPI app function\r\n  const addNewUPIApp = () => {\r\n    if (newUPIApp.name && newUPIApp.upiId) {\r\n      const upiApp: UPIApp = {\r\n        id: `${newUPIApp.name.toLowerCase().replace(/\\s+/g, '')}-${Date.now()}`,\r\n        name: newUPIApp.name,\r\n        upiId: newUPIApp.upiId,\r\n        isConnected: true\r\n      };\r\n      \r\n      handleConnectUPI(upiApp);\r\n      \r\n      // Reset form\r\n      setNewUPIApp({ name: '', upiId: '' });\r\n      setUpiDialogOpen(false);\r\n    }\r\n  };\r\n\r\n  // Anomalies Data\r\n  const anomalies = [\r\n    { transaction: 'Grocery Store XYZ', amount: 4500, date: '2024-10-01', anomaly: '35% higher than usual' },\r\n    { transaction: 'Amazon Purchase', amount: 8900, date: '2024-09-28', anomaly: 'Largest online purchase this month' }\r\n  ];\r\n\r\n  // Subscriptions Data\r\n  const subscriptions = [\r\n    { name: 'Netflix', amount: 799, nextPayment: '2024-10-15', status: 'active', usage: 'High' },\r\n    { name: 'Spotify', amount: 119, nextPayment: '2024-10-08', status: 'active', usage: 'Medium' },\r\n    { name: 'Adobe Creative', amount: 1699, nextPayment: '2024-10-20', status: 'low-usage', usage: 'Low' }\r\n  ];\r\n\r\n  // Upcoming Bills\r\n  const upcomingBills = [\r\n    { name: 'Electricity Bill', amount: 2800, dueDate: '2024-10-12', status: 'pending' },\r\n    { name: 'Internet Bill', amount: 999, dueDate: '2024-10-15', status: 'pending' },\r\n    { name: 'Credit Card', amount: 15420, dueDate: '2024-10-18', status: 'pending' }\r\n  ];\r\n\r\n  // Category breakdown data\r\n  const categoryData = [\r\n    { category: 'Transfer', amount: 68754, percentage: 39.1, color: '#FF5722' },\r\n    { category: 'Shopping', amount: 49853, percentage: 28.4, color: '#4ECDC4' },\r\n    { category: 'Bills', amount: 32626, percentage: 18.6, color: '#2196F3' },\r\n  ];\r\n\r\n  // Handler functions for bank account management\r\n  const handleConnectBankAccount = (bankAccount: RealBankAccount) => {\r\n    const updatedAccounts = [...connectedBankAccounts, bankAccount];\r\n    setConnectedBankAccounts(updatedAccounts);\r\n    localStorage.setItem('connected-bank-accounts', JSON.stringify(updatedAccounts));\r\n    console.log(`Successfully connected to ${bankAccount.bankName}!`);\r\n  };\r\n\r\n  const handleDisconnectBankAccount = (accountId: string) => {\r\n    const account = connectedBankAccounts.find(acc => acc.id === accountId);\r\n    if (account && window.confirm(`Are you sure you want to disconnect ${account.bankName}?`)) {\r\n      const updatedAccounts = connectedBankAccounts.filter(acc => acc.id !== accountId);\r\n      setConnectedBankAccounts(updatedAccounts);\r\n      localStorage.setItem('connected-bank-accounts', JSON.stringify(updatedAccounts));\r\n      console.log(`Disconnected from ${account.bankName}`);\r\n    }\r\n  };\r\n\r\n  // Handler functions for UPI management\r\n  const handleConnectUPI = (upiApp: UPIApp) => {\r\n    const existingApp = connectedUPIApps.find(app => app.name === upiApp.name);\r\n    if (!existingApp) {\r\n      const updatedUPIApps = [...connectedUPIApps, upiApp];\r\n      setConnectedUPIApps(updatedUPIApps);\r\n      localStorage.setItem('connected-upi-apps', JSON.stringify(updatedUPIApps));\r\n      console.log(`Successfully connected to ${upiApp.name}!`);\r\n    }\r\n  };\r\n\r\n  // const handleDisconnectUPI = (upiId: string) => {\r\n  //   const upiApp = connectedUPIApps.find(app => app.id === upiId);\r\n  //   if (upiApp && window.confirm(`Are you sure you want to disconnect ${upiApp.name}?`)) {\r\n  //     const updatedUPIApps = connectedUPIApps.filter(app => app.id !== upiId);\r\n  //     setConnectedUPIApps(updatedUPIApps);\r\n  //     localStorage.setItem('connected-upi-apps', JSON.stringify(updatedUPIApps));\r\n  //     console.log(`Disconnected from ${upiApp.name}`);\r\n  //   }\r\n  // };\r\n\r\n  // Mock transactions data for filtering\r\n  const allTransactions = [\r\n    { id: 1, description: 'Food Court', amount: 650, category: 'Food', date: '2024-10-01', isAnomaly: false },\r\n    { id: 2, description: 'Grocery Store XYZ', amount: 4500, category: 'Food', date: '2024-10-01', isAnomaly: true },\r\n    { id: 3, description: 'Amazon Purchase', amount: 8900, category: 'Shopping', date: '2024-09-28', isAnomaly: true },\r\n    { id: 4, description: 'Electricity Bill', amount: 2800, category: 'Bills', date: '2024-09-25', isAnomaly: false },\r\n    { id: 5, description: 'Metro Card Recharge', amount: 500, category: 'Transport', date: '2024-09-24', isAnomaly: false },\r\n    { id: 6, description: 'Netflix Subscription', amount: 799, category: 'Entertainment', date: '2024-09-20', isAnomaly: false },\r\n    { id: 7, description: 'Restaurant Dinner', amount: 1200, category: 'Food', date: '2024-09-18', isAnomaly: false },\r\n    { id: 8, description: 'Shopping Mall', amount: 3500, category: 'Shopping', date: '2024-09-15', isAnomaly: false }\r\n  ];\r\n\r\n  // Initialize Web Speech API\r\n  React.useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\r\n      const recognitionInstance = new SpeechRecognition();\r\n      recognitionInstance.continuous = false;\r\n      recognitionInstance.interimResults = false;\r\n      recognitionInstance.lang = 'en-US';\r\n      \r\n      recognitionInstance.onresult = (event: any) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setSearchQuery(transcript);\r\n        setIsListening(false);\r\n        setVoiceSearch(false);\r\n      };\r\n      \r\n      recognitionInstance.onerror = () => {\r\n        setIsListening(false);\r\n        setVoiceSearch(false);\r\n        alert('Voice recognition failed. Please try again.');\r\n      };\r\n      \r\n      recognitionInstance.onend = () => {\r\n        setIsListening(false);\r\n        setVoiceSearch(false);\r\n      };\r\n      \r\n      setRecognition(recognitionInstance);\r\n    }\r\n  }, []);\r\n\r\n  // Voice search functionality\r\n  const handleVoiceSearch = () => {\r\n    if (!recognition) {\r\n      alert('Voice recognition not supported in this browser');\r\n      return;\r\n    }\r\n    \r\n    setVoiceSearch(true);\r\n    setIsListening(true);\r\n    recognition.start();\r\n  };\r\n\r\n  // Filter transactions based on current filters\r\n  React.useEffect(() => {\r\n    let filtered = [...allTransactions];\r\n    \r\n    // Search filter\r\n    if (searchQuery) {\r\n      filtered = filtered.filter(t => \r\n        t.description.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        t.category.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n        t.amount.toString().includes(searchQuery)\r\n      );\r\n    }\r\n    \r\n    // Category filter\r\n    if (selectedCategory !== 'all') {\r\n      filtered = filtered.filter(t => t.category.toLowerCase() === selectedCategory.toLowerCase());\r\n    }\r\n    \r\n    // Amount range filter\r\n    if (amountRange.min) {\r\n      filtered = filtered.filter(t => t.amount >= parseInt(amountRange.min));\r\n    }\r\n    if (amountRange.max) {\r\n      filtered = filtered.filter(t => t.amount <= parseInt(amountRange.max));\r\n    }\r\n    \r\n    // Anomaly filter\r\n    if (showAnomaliesOnly) {\r\n      filtered = filtered.filter(t => t.isAnomaly);\r\n    }\r\n    \r\n    setFilteredTransactions(filtered);\r\n  }, [searchQuery, selectedCategory, amountRange, showAnomaliesOnly, allTransactions]);\r\n\r\n  // Save filters to localStorage\r\n  React.useEffect(() => {\r\n    localStorage.setItem('dashboard-category', selectedCategory);\r\n  }, [selectedCategory]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('dashboard-date-filter', dateFilter);\r\n  }, [dateFilter]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('dashboard-amount-range', JSON.stringify(amountRange));\r\n  }, [amountRange]);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('dashboard-show-anomalies', showAnomaliesOnly.toString());\r\n  }, [showAnomaliesOnly]);\r\n\r\n  // Apply filters function\r\n  const applyFilters = () => {\r\n    setFilterOpen(false);\r\n    // Filtering is handled by useEffect above\r\n  };\r\n\r\n  // Reset filters function\r\n  const resetFilters = () => {\r\n    setSelectedCategory('all');\r\n    setDateFilter('all');\r\n    setAmountRange({ min: '', max: '' });\r\n    setShowAnomaliesOnly(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  // Calculate health score color\r\n  const getHealthScoreColor = (score: number) => {\r\n    if (score >= 80) return '#4caf50';\r\n    if (score >= 60) return '#ff9800';\r\n    return '#f44336';\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ py: 3 }}>\r\n      {/* Header with Search */}\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 4 }}>\r\n        <Typography variant=\"h4\" fontWeight=\"bold\">\r\n          Financial Dashboard\r\n        </Typography>\r\n        \r\n        {/* Transaction Search & Filters */}\r\n        <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n          <TextField\r\n            placeholder=\"Try: 'food expenses', 'shopping above 1000', 'bills last month'\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            size=\"small\"\r\n            sx={{ minWidth: 350 }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <Search />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton \r\n                    onClick={handleVoiceSearch}\r\n                    color={isListening ? \"error\" : \"default\"}\r\n                    disabled={!recognition}\r\n                  >\r\n                    {isListening ? <CircularProgress size={20} /> : <Mic />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <IconButton \r\n            onClick={() => setFilterOpen(true)}\r\n            color={selectedCategory !== 'all' || showAnomaliesOnly ? 'primary' : 'default'}\r\n          >\r\n            <Badge \r\n              badgeContent={filteredTransactions.length} \r\n              color=\"primary\"\r\n              max={99}\r\n            >\r\n              <FilterList />\r\n            </Badge>\r\n          </IconButton>\r\n          {(selectedCategory !== 'all' || showAnomaliesOnly || searchQuery) && (\r\n            <Button size=\"small\" onClick={resetFilters} variant=\"outlined\">\r\n              Clear All\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* AI-Powered Spending Insights */}\r\n      <Card sx={{ mb: 4, bgcolor: '#f8f9fa', border: '1px solid #e3f2fd' }}>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n            <PsychologyAlt sx={{ mr: 1, color: '#2196f3' }} />\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              AI-Powered Spending Insights\r\n            </Typography>\r\n            <Chip label=\"Smart AI\" color=\"primary\" size=\"small\" sx={{ ml: 2 }} />\r\n          </Box>\r\n          \r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3 }}>\r\n            {/* Unusual Spending Alert */}\r\n            <Alert severity=\"warning\" sx={{ borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                Unusual Spending Alert\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                You spent ₹{aiInsights.unusualSpending.amount.toLocaleString()} {aiInsights.unusualSpending.comparison} on {aiInsights.unusualSpending.category} this month\r\n              </Typography>\r\n            </Alert>\r\n\r\n            {/* Personalized Tip */}\r\n            <Alert severity=\"info\" sx={{ borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                💡 Smart Tip\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {aiInsights.personalizedTip}\r\n              </Typography>\r\n            </Alert>\r\n\r\n            {/* Future Spending Prediction */}\r\n            <Alert severity=\"success\" sx={{ borderRadius: 2 }}>\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                📈 Spending Prediction\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                Based on your pattern, you might spend ₹{aiInsights.futureSpending.predicted.toLocaleString()} on {aiInsights.futureSpending.category} {aiInsights.futureSpending.month}\r\n              </Typography>\r\n            </Alert>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Financial Health Score */}\r\n      <Card sx={{ mb: 4, bgcolor: '#fff3e0', border: '2px solid #ff9800' }}>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Box>\r\n              <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                <Speed sx={{ mr: 1, color: '#ff9800' }} />\r\n                <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                  Financial Health Score\r\n                </Typography>\r\n              </Box>\r\n              \r\n              <Box display=\"flex\" alignItems=\"center\" gap={4}>\r\n                <Box position=\"relative\" display=\"inline-flex\">\r\n                  <CircularProgress\r\n                    variant=\"determinate\"\r\n                    value={financialHealthScore}\r\n                    size={100}\r\n                    thickness={6}\r\n                    sx={{\r\n                      color: getHealthScoreColor(financialHealthScore),\r\n                      '& .MuiCircularProgress-circle': {\r\n                        strokeLinecap: 'round',\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Box\r\n                    sx={{\r\n                      top: 0,\r\n                      left: 0,\r\n                      bottom: 0,\r\n                      right: 0,\r\n                      position: 'absolute',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"h4\" component=\"div\" color=\"text.secondary\" fontWeight=\"bold\">\r\n                      {financialHealthScore}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n\r\n                <Box flex={1}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                    Health Factors:\r\n                  </Typography>\r\n                  <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"body2\">Savings Ratio:</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        {healthFactors.savingsRatio}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"body2\">Debt-to-Income:</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        {healthFactors.debtToIncome}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"body2\">Emergency Fund:</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"primary.main\">\r\n                        {healthFactors.emergencyFund} months\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"body2\">Investment Growth:</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        {healthFactors.investmentGrowth}%\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            \r\n            <Box textAlign=\"center\">\r\n              <Typography variant=\"h5\" fontWeight=\"bold\" color={getHealthScoreColor(financialHealthScore)}>\r\n                {financialHealthScore >= 80 ? 'Excellent' : financialHealthScore >= 60 ? 'Good' : 'Needs Improvement'}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                💡 Tip: Increase your emergency fund to 6 months for a perfect score\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Main Stats Cards */}\r\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr 1fr' }, gap: 3, mb: 4 }}>\r\n        <Card sx={{ bgcolor: '#d32f2f', color: 'white', height: '100%' }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n              <TrendingDown sx={{ mr: 1 }} />\r\n              <Typography variant=\"body2\">Total Spent</Typography>\r\n            </Box>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              ₹{totalSpent.toLocaleString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card sx={{ bgcolor: '#388e3c', color: 'white', height: '100%' }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n              <TrendingUp sx={{ mr: 1 }} />\r\n              <Typography variant=\"body2\">Total Income</Typography>\r\n            </Box>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              ₹{totalIncome.toLocaleString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card sx={{ bgcolor: '#1976d2', color: 'white', height: '100%' }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n              <AccountBalance sx={{ mr: 1 }} />\r\n              <Typography variant=\"body2\">Transactions</Typography>\r\n            </Box>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              {totalTransactions}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card sx={{ bgcolor: '#f57c00', color: 'white', height: '100%' }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n              <Category sx={{ mr: 1 }} />\r\n              <Typography variant=\"body2\">Top Category</Typography>\r\n            </Box>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\">\r\n              {topCategory}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      {/* Goal Tracking & Anomaly Detection */}\r\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '1fr 1fr' }, gap: 4, mb: 4 }}>\r\n        {/* Goal Tracking Widget */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"between\" mb={3}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <EmojiEvents sx={{ mr: 1, color: '#ffd700' }} />\r\n                <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                  Goal Tracking\r\n                </Typography>\r\n              </Box>\r\n              <Button \r\n                size=\"small\" \r\n                onClick={() => setGoalDialogOpen(true)}\r\n                startIcon={<TrendingUp />}\r\n              >\r\n                View All\r\n              </Button>\r\n            </Box>\r\n\r\n            {goals.map((goal, index) => (\r\n              <Box key={index} sx={{ mb: 3 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\r\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                    {goal.name}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"primary\">\r\n                    {goal.percentage}%\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                <Typography variant=\"body2\" color=\"text.secondary\" mb={1}>\r\n                  ₹{(goal.saved/100000).toFixed(1)}L / ₹{(goal.target/100000).toFixed(0)}L saved\r\n                </Typography>\r\n                \r\n                <LinearProgress\r\n                  variant=\"determinate\"\r\n                  value={goal.percentage}\r\n                  sx={{\r\n                    height: 8,\r\n                    borderRadius: 4,\r\n                    mb: 2,\r\n                    '& .MuiLinearProgress-bar': {\r\n                      borderRadius: 4,\r\n                    },\r\n                  }}\r\n                />\r\n                \r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                  <Box>\r\n                    <Typography variant=\"body2\" color=\"success.main\">\r\n                      💡 AI Recommends: ₹{goal.aiRecommendation.toLocaleString()}/month\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      📅 Timeline: {goal.timeline}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            ))}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Expense Anomaly Detection */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n              <Warning sx={{ mr: 1, color: '#ff9800' }} />\r\n              <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                Expense Anomaly Detection\r\n              </Typography>\r\n              <Chip label=\"2 Anomalies\" color=\"warning\" size=\"small\" sx={{ ml: 2 }} />\r\n            </Box>\r\n\r\n            {anomalies.map((anomaly, index) => (\r\n              <Alert \r\n                key={index} \r\n                severity=\"warning\" \r\n                sx={{ mb: 2, borderRadius: 2 }}\r\n                icon={<Warning />}\r\n              >\r\n                <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                  {anomaly.transaction}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  ₹{anomaly.amount.toLocaleString()} on {anomaly.date}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"warning.main\">\r\n                  🚨 {anomaly.anomaly}\r\n                </Typography>\r\n              </Alert>\r\n            ))}\r\n\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: '#f3e5f5', borderRadius: 2 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                💡 <strong>Pattern Analysis:</strong> This month's grocery spending is 35% higher than your 6-month average of ₹8,200\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      {/* Services Section */}\r\n      <Card sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n            <Assessment sx={{ mr: 1, color: '#ff4081' }} />\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              Dynamic Financial Services\r\n            </Typography>\r\n            <Chip label=\"3/5 Active\" color=\"primary\" size=\"small\" sx={{ ml: 'auto' }} />\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr', lg: '1fr 1fr 1fr 1fr 1fr' }, gap: 3 }}>\r\n            <Card sx={{ border: 2, borderColor: '#4caf50', bgcolor: '#f1f8e9' }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Smartphone sx={{ fontSize: 40, color: '#4caf50', mb: 1 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#4caf50\">\r\n                  SMS Monitoring\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Auto-detecting transactions\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card \r\n              sx={{ \r\n                border: 2, \r\n                borderColor: connectedUPIApps.length > 0 ? '#4caf50' : '#2196f3', \r\n                bgcolor: connectedUPIApps.length > 0 ? '#e8f5e8' : '#e3f2fd', \r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': { transform: 'translateY(-2px)', boxShadow: 4 }\r\n              }}\r\n              onClick={() => setUpiDialogOpen(true)}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Phone sx={{ \r\n                  fontSize: 40, \r\n                  color: connectedUPIApps.length > 0 ? '#4caf50' : '#2196f3', \r\n                  mb: 1 \r\n                }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" \r\n                  color={connectedUPIApps.length > 0 ? '#4caf50' : '#2196f3'}>\r\n                  UPI Monitoring\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {connectedUPIApps.length > 0 \r\n                    ? `${connectedUPIApps.length} apps connected` \r\n                    : 'Click to connect UPI apps'}\r\n                </Typography>\r\n                {connectedUPIApps.length > 0 && (\r\n                  <Box sx={{ mt: 1 }}>\r\n                    {connectedUPIApps.slice(0, 3).map((app, index) => (\r\n                      <Chip \r\n                        key={app.id}\r\n                        label={app.name} \r\n                        size=\"small\" \r\n                        sx={{ mr: 0.5, fontSize: '0.7rem' }}\r\n                        color=\"success\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    ))}\r\n                    {connectedUPIApps.length > 3 && (\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        +{connectedUPIApps.length - 3} more\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card \r\n              sx={{ \r\n                border: 2, \r\n                borderColor: connectedBankAccounts.length > 0 ? '#4caf50' : '#ff9800', \r\n                bgcolor: connectedBankAccounts.length > 0 ? '#e8f5e8' : '#fff3e0',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': { transform: 'translateY(-2px)', boxShadow: 4 }\r\n              }}\r\n              onClick={() => setBankDialogOpen(true)}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <AccountBalance sx={{ \r\n                  fontSize: 40, \r\n                  color: connectedBankAccounts.length > 0 ? '#4caf50' : '#ff9800', \r\n                  mb: 1 \r\n                }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" \r\n                  color={connectedBankAccounts.length > 0 ? '#4caf50' : '#ff9800'}>\r\n                  Bank Integration\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {connectedBankAccounts.length > 0 \r\n                    ? `${connectedBankAccounts.length} banks connected` \r\n                    : 'Click to connect banks'}\r\n                </Typography>\r\n                {connectedBankAccounts.length > 0 && (\r\n                  <Box sx={{ mt: 1 }}>\r\n                    <Typography variant=\"caption\" color=\"success.main\" fontWeight=\"bold\">\r\n                      ₹{totalBalance.toLocaleString()} total balance\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card \r\n              sx={{ border: 2, borderColor: '#4caf50', bgcolor: '#f1f8e9', cursor: 'pointer' }}\r\n              onClick={() => setShowSmartBudgetPopup(true)}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Assessment sx={{ fontSize: 40, color: '#4caf50', mb: 1 }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#4caf50\">\r\n                  Smart Budgets\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  AI-powered monitoring\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"#4caf50\" sx={{ mt: 1 }}>\r\n                  Click to view insights\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card \r\n              sx={{ \r\n                border: 2, \r\n                borderColor: portfolioGain >= 0 ? '#4caf50' : '#f44336', \r\n                bgcolor: portfolioGain >= 0 ? '#e8f5e8' : '#ffebee',\r\n                cursor: 'pointer',\r\n                transition: 'all 0.3s ease',\r\n                '&:hover': { transform: 'translateY(-2px)', boxShadow: 4 }\r\n              }}\r\n              onClick={() => {\r\n                const stocksToAdd = ['WIPRO', 'BHARTIARTL', 'ITC', 'SBIN', 'MARUTI'];\r\n                const unownedStocks = stocksToAdd.filter(stock => \r\n                  !investments.some(inv => inv.symbol === stock)\r\n                );\r\n                \r\n                if (unownedStocks.length > 0) {\r\n                  const stockToAdd = unownedStocks[0];\r\n                  const confirmed = window.confirm(`Add ${stockToAdd} to your portfolio?`);\r\n                  if (confirmed) {\r\n                    const basePrice = Math.floor(1000 + Math.random() * 2000);\r\n                    const quantity = Math.floor(5 + Math.random() * 25);\r\n                    const currentPrice = basePrice + Math.floor((Math.random() - 0.5) * 200);\r\n                    const newInvestment = {\r\n                      symbol: stockToAdd,\r\n                      name: `${stockToAdd} Limited`,\r\n                      quantity: quantity,\r\n                      buyPrice: basePrice,\r\n                      currentPrice: currentPrice,\r\n                      gain: (currentPrice - basePrice) * quantity\r\n                    };\r\n                    \r\n                    const updatedInvestments = [...investments, newInvestment];\r\n                    setInvestments(updatedInvestments);\r\n                    localStorage.setItem('portfolio-investments', JSON.stringify(updatedInvestments));\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <TrendingUp sx={{ \r\n                  fontSize: 40, \r\n                  color: portfolioGain >= 0 ? '#4caf50' : '#f44336', \r\n                  mb: 1 \r\n                }} />\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" \r\n                  color={portfolioGain >= 0 ? '#4caf50' : '#f44336'}>\r\n                  Investment Tracking\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {investments.length > 0 \r\n                    ? `${investments.length} stocks in portfolio` \r\n                    : 'Click to add investments'}\r\n                </Typography>\r\n                {investments.length > 0 && (\r\n                  <Box sx={{ mt: 1 }}>\r\n                    <Typography variant=\"caption\" \r\n                      color={portfolioGain >= 0 ? 'success.main' : 'error.main'} \r\n                      fontWeight=\"bold\">\r\n                      ₹{portfolioValue.toLocaleString()} \r\n                      ({portfolioGain >= 0 ? '+' : ''}₹{portfolioGain.toLocaleString()})\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Real-time Transactions */}\r\n          <Card sx={{ mt: 3, border: 1, borderColor: '#e0e0e0' }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"between\" mb={2}>\r\n                <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                  Recent Transactions\r\n                </Typography>\r\n                <Badge badgeContent={unreadCount} color=\"error\">\r\n                  <NotificationsActive color=\"primary\" />\r\n                </Badge>\r\n              </Box>\r\n              \r\n              {recentTransactions.length > 0 ? (\r\n                <Box>\r\n                  {recentTransactions.slice(0, 5).map((transaction) => (\r\n                    <Box key={transaction.id} \r\n                      sx={{ \r\n                        display: 'flex', \r\n                        alignItems: 'center', \r\n                        justifyContent: 'space-between',\r\n                        py: 1.5,\r\n                        px: 2,\r\n                        mb: 1,\r\n                        borderRadius: 1,\r\n                        bgcolor: transaction.type === 'credit' ? '#e8f5e8' : '#fff3e0',\r\n                        border: 1,\r\n                        borderColor: transaction.type === 'credit' ? '#4caf50' : '#ff9800'\r\n                      }}\r\n                    >\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar sx={{ \r\n                          bgcolor: transaction.type === 'credit' ? '#4caf50' : '#ff9800', \r\n                          width: 32, height: 32, mr: 2 \r\n                        }}>\r\n                          {transaction.type === 'credit' ? '+' : '-'}\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                            {transaction.description}\r\n                          </Typography>\r\n                          <Typography variant=\"caption\" color=\"text.secondary\">\r\n                            {transaction.category} • {transaction.method} • {new Date(transaction.time).toLocaleTimeString()}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        fontWeight=\"bold\"\r\n                        color={transaction.type === 'credit' ? 'success.main' : 'warning.main'}\r\n                      >\r\n                        {transaction.type === 'credit' ? '+' : ''}₹{Math.abs(transaction.amount).toLocaleString()}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))}\r\n                  <Box sx={{ textAlign: 'center', mt: 2 }}>\r\n                    <Button \r\n                      size=\"small\" \r\n                      onClick={() => setUnreadCount(0)}\r\n                      disabled={unreadCount === 0}\r\n                    >\r\n                      Mark All as Read ({unreadCount} new)\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\" py={3}>\r\n                  No recent transactions\r\n                </Typography>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Bank Data Status */}\r\n          <Box sx={{ mt: 3, p: 2, bgcolor: '#e8f5e8', borderRadius: 1, border: 1, borderColor: '#4caf50' }}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <CheckCircle sx={{ color: '#4caf50', mr: 1 }} />\r\n              <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"#4caf50\">\r\n                ✅ Real Bank Data Active\r\n              </Typography>\r\n            </Box>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Connected to State Bank of India - Using real transaction data\r\n            </Typography>\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Subscription Manager & Bill Reminders */}\r\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', lg: '1fr 1fr' }, gap: 4, mb: 4 }}>\r\n        {/* Subscription Manager */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Subscriptions sx={{ mr: 1, color: '#9c27b0' }} />\r\n                <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                  Subscription Manager\r\n                </Typography>\r\n              </Box>\r\n              <IconButton onClick={(e) => setSubscriptionMenuAnchor(e.currentTarget)}>\r\n                <Badge badgeContent={1} color=\"error\">\r\n                  <NotificationsActive />\r\n                </Badge>\r\n              </IconButton>\r\n            </Box>\r\n\r\n            {subscriptions.map((sub, index) => (\r\n              <Card key={index} sx={{ mb: 2, bgcolor: sub.status === 'low-usage' ? '#ffebee' : '#f9f9f9' }}>\r\n                <CardContent sx={{ py: 2 }}>\r\n                  <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Avatar sx={{ width: 32, height: 32, mr: 2 }}>\r\n                        {sub.name[0]}\r\n                      </Avatar>\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                          {sub.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          Next: {sub.nextPayment}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box textAlign=\"right\">\r\n                      <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                        ₹{sub.amount}\r\n                      </Typography>\r\n                      <Chip \r\n                        label={sub.usage} \r\n                        size=\"small\" \r\n                        color={\r\n                          sub.usage === 'High' ? 'success' : \r\n                          sub.usage === 'Medium' ? 'warning' : 'error'\r\n                        }\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n                  {sub.status === 'low-usage' && (\r\n                    <Alert severity=\"warning\" sx={{ mt: 1 }}>\r\n                      <Typography variant=\"body2\">\r\n                        💡 Consider canceling - low usage detected\r\n                      </Typography>\r\n                    </Alert>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n              💰 Total monthly subscriptions: ₹{subscriptions.reduce((sum, sub) => sum + sub.amount, 0).toLocaleString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Bill Payment Reminders */}\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n              <CalendarMonth sx={{ mr: 1, color: '#2196f3' }} />\r\n              <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                Bill Payment Reminders\r\n              </Typography>\r\n              <Chip label={`${upcomingBills.length} Due`} color=\"error\" size=\"small\" sx={{ ml: 2 }} />\r\n            </Box>\r\n\r\n            {upcomingBills.map((bill, index) => (\r\n              <Card key={index} sx={{ mb: 2, border: '1px solid #ffcdd2' }}>\r\n                <CardContent sx={{ py: 2 }}>\r\n                  <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <ReceiptLong sx={{ mr: 2, color: '#f44336' }} />\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                          {bill.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"error\">\r\n                          Due: {bill.dueDate}\r\n                        </Typography>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box textAlign=\"right\">\r\n                      <Typography variant=\"h6\" fontWeight=\"bold\" color=\"error\">\r\n                        ₹{bill.amount.toLocaleString()}\r\n                      </Typography>\r\n                      <Button size=\"small\" variant=\"contained\" sx={{ mt: 1 }}>\r\n                        Pay Now\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: '#e3f2fd', borderRadius: 2 }}>\r\n              <Typography variant=\"body2\" color=\"primary\">\r\n                📅 <strong>Smart Reminder:</strong> Set up auto-pay for recurring bills to never miss a payment\r\n              </Typography>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n\r\n      {/* Filtered Transactions Results */}\r\n      {(searchQuery || selectedCategory !== 'all' || showAnomaliesOnly) && (\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\r\n              <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                Search Results\r\n              </Typography>\r\n              <Chip \r\n                label={`${filteredTransactions.length} transactions`} \r\n                color=\"primary\"\r\n              />\r\n            </Box>\r\n            \r\n            {filteredTransactions.length > 0 ? (\r\n              <Box>\r\n                {filteredTransactions.slice(0, 5).map((transaction) => (\r\n                  <Card key={transaction.id} sx={{ mb: 2, bgcolor: transaction.isAnomaly ? '#fff3e0' : '#f9f9f9' }}>\r\n                    <CardContent sx={{ py: 2 }}>\r\n                      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                          <Avatar sx={{ width: 32, height: 32, mr: 2, bgcolor: 'primary.main' }}>\r\n                            {transaction.category[0]}\r\n                          </Avatar>\r\n                          <Box>\r\n                            <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                              {transaction.description}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              {transaction.category} • {transaction.date}\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box textAlign=\"right\">\r\n                          <Typography variant=\"h6\" fontWeight=\"bold\" color={transaction.isAnomaly ? 'warning.main' : 'text.primary'}>\r\n                            ₹{transaction.amount.toLocaleString()}\r\n                          </Typography>\r\n                          {transaction.isAnomaly && (\r\n                            <Chip label=\"Unusual\" color=\"warning\" size=\"small\" />\r\n                          )}\r\n                        </Box>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n                {filteredTransactions.length > 5 && (\r\n                  <Button variant=\"outlined\" fullWidth sx={{ mt: 2 }}>\r\n                    View All {filteredTransactions.length} Results\r\n                  </Button>\r\n                )}\r\n              </Box>\r\n            ) : (\r\n              <Box textAlign=\"center\" py={4}>\r\n                <Typography variant=\"body1\" color=\"text.secondary\">\r\n                  No transactions found matching your criteria\r\n                </Typography>\r\n                <Button onClick={resetFilters} sx={{ mt: 2 }}>\r\n                  Clear Filters\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Category Breakdown */}\r\n      <Card>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\" gutterBottom>\r\n            Category Breakdown\r\n          </Typography>\r\n          \r\n          {categoryData.map((category, index) => (\r\n            <Box key={category.category} sx={{ mb: 3 }}>\r\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={1}>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Box\r\n                    sx={{\r\n                      width: 12,\r\n                      height: 12,\r\n                      borderRadius: '50%',\r\n                      bgcolor: category.color,\r\n                      mr: 2\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                    {category.category}\r\n                  </Typography>\r\n                </Box>\r\n                <Box textAlign=\"right\">\r\n                  <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                    ₹{category.amount.toLocaleString()}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {category.percentage}%\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={category.percentage}\r\n                sx={{\r\n                  height: 8,\r\n                  borderRadius: 4,\r\n                  bgcolor: '#f0f0f0',\r\n                  '& .MuiLinearProgress-bar': {\r\n                    bgcolor: category.color,\r\n                    borderRadius: 4,\r\n                  },\r\n                }}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Enhanced Bank Account Integration */}\r\n      <Card sx={{ mb: 4, bgcolor: '#e8f5e8', border: '2px solid #4caf50' }}>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <CheckCircle sx={{ color: '#4caf50', mr: 1 }} />\r\n              <Typography variant=\"h6\" fontWeight=\"bold\" color=\"#4caf50\">\r\n                Real Bank Integration Status\r\n              </Typography>\r\n            </Box>\r\n            <Button \r\n              variant=\"outlined\" \r\n              size=\"small\"\r\n              onClick={() => {\r\n                // Demo: Add a sample bank account\r\n                const confirmed = window.confirm('Do you want to connect a new bank account?');\r\n                if (confirmed) {\r\n                  const newBankAccount: RealBankAccount = {\r\n                    id: Date.now().toString(),\r\n                    bankName: 'State Bank of India',\r\n                    accountNumber: '****1234',\r\n                    accountType: 'Savings',\r\n                    balance: 45650,\r\n                    isConnected: true,\r\n                    lastSyncTime: new Date()\r\n                  };\r\n                  handleConnectBankAccount(newBankAccount);\r\n                  alert(`Successfully connected to ${newBankAccount.bankName}!`);\r\n                }\r\n              }}\r\n            >\r\n              Connect Bank\r\n            </Button>\r\n          </Box>\r\n          \r\n          {connectedBankAccounts.length > 0 ? (\r\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3 }}>\r\n              {connectedBankAccounts.map((account) => (\r\n                <Box key={account.id} sx={{ border: '1px solid #e0e0e0', borderRadius: 2, p: 2 }}>\r\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">Connected Bank</Typography>\r\n                    <IconButton \r\n                      size=\"small\" \r\n                      color=\"error\"\r\n                      onClick={() => handleDisconnectBankAccount(account.id)}\r\n                      title=\"Disconnect Account\"\r\n                    >\r\n                      ❌\r\n                    </IconButton>\r\n                  </Box>\r\n                  <Typography variant=\"h6\" fontWeight=\"bold\">{account.bankName}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">{account.accountNumber}</Typography>\r\n                  <Typography variant=\"body2\" color=\"success.main\">✅ Real-time sync active</Typography>\r\n                  {account.balance && (\r\n                    <Typography variant=\"body2\" color=\"text.primary\">\r\n                      Balance: ₹{account.balance.toLocaleString()}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr 1fr' }, gap: 3 }}>\r\n              <Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">Connected Banks</Typography>\r\n                <Typography variant=\"h6\" fontWeight=\"bold\" color=\"text.disabled\">No banks connected</Typography>\r\n                <Typography variant=\"body2\" color=\"text.disabled\">Connect your bank to get real-time data</Typography>\r\n              </Box>\r\n              <Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">Last Sync</Typography>\r\n                <Typography variant=\"h6\" fontWeight=\"bold\" color=\"text.disabled\">Never</Typography>\r\n                <Typography variant=\"body2\" color=\"text.disabled\">Connect a bank to sync</Typography>\r\n              </Box>\r\n              <Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">Data Quality</Typography>\r\n                <Typography variant=\"h6\" fontWeight=\"bold\" color=\"text.disabled\">N/A</Typography>\r\n                <Typography variant=\"body2\" color=\"text.disabled\">Awaiting connection</Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Investment Portfolio Section */}\r\n      <Card sx={{ mb: 3 }}>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"between\" mb={2}>\r\n            <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              📈 Investment Portfolio\r\n              <Chip \r\n                label={`${investments.length} Holdings`}\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Typography>\r\n            <Box display=\"flex\" gap={1}>\r\n              <Chip \r\n                label={`Total: ₹${portfolioValue.toLocaleString()}`}\r\n                color=\"success\"\r\n                size=\"small\"\r\n              />\r\n              <Chip \r\n                label={`${portfolioGain >= 0 ? '+' : ''}${portfolioGain.toFixed(2)}%`}\r\n                color={portfolioGain >= 0 ? \"success\" : \"error\"}\r\n                size=\"small\"\r\n              />\r\n            </Box>\r\n          </Box>\r\n\r\n          {investments.length > 0 ? (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={2}>\r\n              {investments.map((investment) => {\r\n                const gainLoss = investment.currentPrice - investment.purchasePrice;\r\n                const gainLossPercent = ((gainLoss / investment.purchasePrice) * 100);\r\n                const totalValue = investment.currentPrice * investment.quantity;\r\n                \r\n                return (\r\n                  <Box key={investment.id} sx={{ flex: '1 1 300px', minWidth: '300px', maxWidth: '400px' }}>\r\n                    <Card variant=\"outlined\" sx={{ height: '100%' }}>\r\n                      <CardContent sx={{ p: 2 }}>\r\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"start\" mb={1}>\r\n                          <Box>\r\n                            <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                              {investment.symbol}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"text.secondary\">\r\n                              {investment.name}\r\n                            </Typography>\r\n                          </Box>\r\n                          <Chip \r\n                            label={investment.sector}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ fontSize: '0.7rem' }}\r\n                          />\r\n                        </Box>\r\n                        \r\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                            ₹{investment.currentPrice.toFixed(2)}\r\n                          </Typography>\r\n                          <Chip\r\n                            label={`${gainLoss >= 0 ? '+' : ''}₹${gainLoss.toFixed(2)}`}\r\n                            color={gainLoss >= 0 ? \"success\" : \"error\"}\r\n                            size=\"small\"\r\n                            sx={{ fontSize: '0.7rem' }}\r\n                          />\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Qty: {investment.quantity}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color={gainLossPercent >= 0 ? \"success.main\" : \"error.main\"}>\r\n                            {gainLossPercent >= 0 ? '+' : ''}{gainLossPercent.toFixed(2)}%\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Total Value\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                            ₹{totalValue.toLocaleString()}\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <LinearProgress \r\n                          variant=\"determinate\" \r\n                          value={Math.min(100, Math.max(0, 50 + (gainLossPercent * 2)))}\r\n                          color={gainLossPercent >= 0 ? \"success\" : \"error\"}\r\n                          sx={{ mt: 1, height: 4, borderRadius: 2 }}\r\n                        />\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Box>\r\n          ) : (\r\n            <Box \r\n              display=\"flex\" \r\n              flexDirection=\"column\" \r\n              alignItems=\"center\" \r\n              justifyContent=\"center\" \r\n              py={4}\r\n              sx={{ textAlign: 'center' }}\r\n            >\r\n              <TrendingUpIcon sx={{ fontSize: 48, color: 'text.disabled', mb: 2 }} />\r\n              <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\r\n                No Investments Yet\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.disabled\" mb={2}>\r\n                Start building your investment portfolio\r\n              </Typography>\r\n              <Button \r\n                variant=\"outlined\" \r\n                startIcon={<AddIcon />}\r\n                onClick={() => {\r\n                  // Add sample investment for demo\r\n                  const sampleInvestment: Investment = {\r\n                    id: Date.now().toString(),\r\n                    symbol: 'RELIANCE',\r\n                    name: 'Reliance Industries Ltd',\r\n                    quantity: 10,\r\n                    purchasePrice: 2450.50,\r\n                    currentPrice: 2567.80,\r\n                    sector: 'Energy',\r\n                    purchaseDate: new Date().toISOString(),\r\n                    type: 'equity'\r\n                  };\r\n                  const updatedInvestments = [...investments, sampleInvestment];\r\n                  setInvestments(updatedInvestments);\r\n                  localStorage.setItem('finsense_investments', JSON.stringify(updatedInvestments));\r\n                }}\r\n              >\r\n                Add Sample Investment\r\n              </Button>\r\n            </Box>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Filter Dialog */}\r\n      <Dialog open={filterOpen} onClose={() => setFilterOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n            Advanced Transaction Filters\r\n            <Chip \r\n              label={`${filteredTransactions.length} results`} \r\n              color=\"primary\" \r\n              size=\"small\" \r\n            />\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3, mt: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Category</InputLabel>\r\n              <Select\r\n                value={selectedCategory}\r\n                onChange={(e) => setSelectedCategory(e.target.value)}\r\n                label=\"Category\"\r\n              >\r\n                <MenuItem value=\"all\">All Categories</MenuItem>\r\n                <MenuItem value=\"food\">Food & Dining</MenuItem>\r\n                <MenuItem value=\"shopping\">Shopping</MenuItem>\r\n                <MenuItem value=\"bills\">Bills & Utilities</MenuItem>\r\n                <MenuItem value=\"transport\">Transportation</MenuItem>\r\n                <MenuItem value=\"entertainment\">Entertainment</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <Box display=\"flex\" gap={2}>\r\n              <TextField\r\n                label=\"Min Amount\"\r\n                placeholder=\"₹500\"\r\n                value={amountRange.min}\r\n                onChange={(e) => setAmountRange(prev => ({ ...prev, min: e.target.value }))}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Max Amount\"\r\n                placeholder=\"₹5000\"\r\n                value={amountRange.max}\r\n                onChange={(e) => setAmountRange(prev => ({ ...prev, max: e.target.value }))}\r\n                type=\"number\"\r\n                fullWidth\r\n              />\r\n            </Box>\r\n            \r\n            <FormControl fullWidth>\r\n              <InputLabel>Date Range</InputLabel>\r\n              <Select\r\n                value={dateFilter}\r\n                onChange={(e) => setDateFilter(e.target.value)}\r\n                label=\"Date Range\"\r\n              >\r\n                <MenuItem value=\"all\">All Time</MenuItem>\r\n                <MenuItem value=\"today\">Today</MenuItem>\r\n                <MenuItem value=\"week\">This Week</MenuItem>\r\n                <MenuItem value=\"month\">This Month</MenuItem>\r\n                <MenuItem value=\"quarter\">This Quarter</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            \r\n            <FormControlLabel\r\n              control={\r\n                <Switch \r\n                  checked={showAnomaliesOnly}\r\n                  onChange={(e) => setShowAnomaliesOnly(e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Show only unusual transactions\"\r\n            />\r\n\r\n            {/* Filter Preview */}\r\n            <Box sx={{ bgcolor: '#f5f5f5', p: 2, borderRadius: 1 }}>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                Filter Preview:\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n                {filteredTransactions.length} transactions found\r\n                {selectedCategory !== 'all' && ` in ${selectedCategory}`}\r\n                {amountRange.min && ` above ₹${amountRange.min}`}\r\n                {amountRange.max && ` below ₹${amountRange.max}`}\r\n                {showAnomaliesOnly && ` (anomalies only)`}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setFilterOpen(false)}>Cancel</Button>\r\n          <Button onClick={resetFilters} color=\"secondary\">Reset All</Button>\r\n          <Button variant=\"contained\" onClick={applyFilters}>Apply Filters</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Goal Details Dialog */}\r\n      <Dialog open={goalDialogOpen} onClose={() => setGoalDialogOpen(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <EmojiEvents sx={{ mr: 1, color: '#ffd700' }} />\r\n            Goal Tracking Details\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mt: 2 }}>\r\n            {goals.map((goal, index) => (\r\n              <Card key={index} sx={{ mb: 3 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" fontWeight=\"bold\" gutterBottom>\r\n                    {goal.name}\r\n                  </Typography>\r\n                  \r\n                  <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\r\n                    <Typography variant=\"body1\">\r\n                      Progress: ₹{(goal.saved/100000).toFixed(1)}L / ₹{(goal.target/100000).toFixed(0)}L\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" color=\"primary\" fontWeight=\"bold\">\r\n                      {goal.percentage}%\r\n                    </Typography>\r\n                  </Box>\r\n                  \r\n                  <LinearProgress\r\n                    variant=\"determinate\"\r\n                    value={goal.percentage}\r\n                    sx={{ height: 10, borderRadius: 5, mb: 2 }}\r\n                  />\r\n                  \r\n                  <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 2 }}>\r\n                    <Box>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">AI Recommendation</Typography>\r\n                      <Typography variant=\"h6\" color=\"success.main\">\r\n                        ₹{goal.aiRecommendation.toLocaleString()}/month\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">Projected Timeline</Typography>\r\n                      <Typography variant=\"h6\" color=\"primary\">\r\n                        {goal.timeline}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogContent>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n            Add New Goal\r\n          </Typography>\r\n          <Box component=\"form\" sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n            <TextField\r\n              label=\"Goal Name\"\r\n              value={newGoal.name}\r\n              onChange={(e) => setNewGoal({ ...newGoal, name: e.target.value })}\r\n              fullWidth\r\n              placeholder=\"e.g., New Car, Education, Wedding\"\r\n            />\r\n            <TextField\r\n              label=\"Target Amount (₹)\"\r\n              value={newGoal.target}\r\n              onChange={(e) => setNewGoal({ ...newGoal, target: e.target.value })}\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"e.g., 1000000\"\r\n            />\r\n            <TextField\r\n              label=\"Already Saved (₹)\"\r\n              value={newGoal.saved}\r\n              onChange={(e) => setNewGoal({ ...newGoal, saved: e.target.value })}\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"e.g., 200000\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => {\r\n            setGoalDialogOpen(false);\r\n            setNewGoal({ name: '', target: '', saved: '' });\r\n          }}>Cancel</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={addNewGoal}\r\n            disabled={!newGoal.name || !newGoal.target || !newGoal.saved}\r\n          >\r\n            Add Goal\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Subscription Menu */}\r\n      <Menu\r\n        anchorEl={subscriptionMenuAnchor}\r\n        open={Boolean(subscriptionMenuAnchor)}\r\n        onClose={() => setSubscriptionMenuAnchor(null)}\r\n      >\r\n        <MenuItem onClick={() => setSubscriptionMenuAnchor(null)}>\r\n          <ListItemIcon><NotificationsActive /></ListItemIcon>\r\n          <ListItemText primary=\"Adobe Creative price increased by ₹200\" />\r\n        </MenuItem>\r\n        <MenuItem onClick={() => setSubscriptionMenuAnchor(null)}>\r\n          <ListItemIcon><Schedule /></ListItemIcon>\r\n          <ListItemText primary=\"Set up price alerts\" />\r\n        </MenuItem>\r\n      </Menu>\r\n\r\n      {/* Smart Budget Popup */}\r\n      <Dialog open={showSmartBudgetPopup} onClose={() => setShowSmartBudgetPopup(false)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Assessment sx={{ color: '#4caf50', mr: 1 }} />\r\n            Smart Budget Analysis\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom color=\"#4caf50\">\r\n              💡 AI-Powered Financial Insights\r\n            </Typography>\r\n            \r\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3, mb: 3 }}>\r\n              <Card sx={{ bgcolor: '#e8f5e8', border: '1px solid #4caf50' }}>\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#4caf50\">\r\n                    📊 Monthly Budget Health\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    • Income: ₹1,58,000 (Target achieved ✅)\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    • Expenses: ₹29,000 (18% of income - Excellent!)\r\n                  </Typography> \r\n                  <Typography variant=\"body2\">\r\n                    • Savings Rate: 82% (₹1,29,000 saved)\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"success.main\" sx={{ mt: 1 }}>\r\n                    🎉 You're saving exceptionally well!\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n              \r\n              <Card sx={{ bgcolor: '#fff3e0', border: '1px solid #ff9800' }}>\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#ff9800\">\r\n                    ⚠️ Spending Patterns\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    • Food: ₹8,500 (29% of expenses)\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    • Transport: ₹5,200 (18% of expenses)\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    • Shopping: ₹4,800 (17% of expenses)\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"warning.main\" sx={{ mt: 1 }}>\r\n                    💡 Consider meal planning to optimize food costs\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n            \r\n            <Card sx={{ bgcolor: '#f3e5f5', border: '1px solid #9c27b0', mb: 3 }}>\r\n              <CardContent>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#9c27b0\">\r\n                  🎯 Smart Recommendations\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                  1. <strong>Emergency Fund:</strong> You have 5.4 months of expenses saved - Perfect! ✅\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  2. <strong>Investment Opportunity:</strong> With 82% savings rate, consider increasing SIP by ₹20,000\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  3. <strong>Tax Saving:</strong> Invest ₹50,000 in ELSS funds before March for ₹15,600 tax benefit\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  4. <strong>Weekend Spending:</strong> Your weekend expenses are 40% higher - try budgeting ₹2,000/weekend\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n            \r\n            <Card sx={{ bgcolor: '#e1f5fe', border: '1px solid #2196f3' }}>\r\n              <CardContent>\r\n                <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#2196f3\">\r\n                  📈 Future Projections\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                  • At current savings rate, you'll save ₹15.48L annually\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  • Your dream home goal (₹50L) is achievable in 3.2 years\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  • Retirement corpus projection: ₹12.8 Cr by age 60\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"info.main\" sx={{ mt: 1 }}>\r\n                  🌟 You're on track for financial independence!\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowSmartBudgetPopup(false)} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"success\"\r\n            onClick={() => {\r\n              setShowSmartBudgetPopup(false);\r\n              alert('Smart Budget insights saved to your profile!');\r\n            }}\r\n          >\r\n            Save Insights\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Bank Addition Dialog */}\r\n      <Dialog open={bankDialogOpen} onClose={() => setBankDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <AccountBalance sx={{ color: '#4caf50', mr: 1 }} />\r\n            Add Bank Account\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n            <TextField\r\n              label=\"Bank Name\"\r\n              value={newBankAccount.bankName}\r\n              onChange={(e) => setNewBankAccount({ ...newBankAccount, bankName: e.target.value })}\r\n              fullWidth\r\n              placeholder=\"e.g., HDFC Bank, ICICI Bank, SBI\"\r\n            />\r\n            <TextField\r\n              label=\"Account Number\"\r\n              value={newBankAccount.accountNumber}\r\n              onChange={(e) => setNewBankAccount({ ...newBankAccount, accountNumber: e.target.value })}\r\n              fullWidth\r\n              placeholder=\"e.g., 1234567890123456\"\r\n            />\r\n            <FormControl fullWidth>\r\n              <InputLabel>Account Type</InputLabel>\r\n              <Select\r\n                value={newBankAccount.accountType}\r\n                onChange={(e) => setNewBankAccount({ ...newBankAccount, accountType: e.target.value as 'Savings' | 'Current' })}\r\n                input={<input />}\r\n              >\r\n                <MenuItem value=\"Savings\">Savings</MenuItem>\r\n                <MenuItem value=\"Current\">Current</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              label=\"Current Balance (₹)\"\r\n              value={newBankAccount.balance}\r\n              onChange={(e) => setNewBankAccount({ ...newBankAccount, balance: e.target.value })}\r\n              fullWidth\r\n              type=\"number\"\r\n              placeholder=\"e.g., 50000\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => {\r\n            setBankDialogOpen(false);\r\n            setNewBankAccount({ bankName: '', accountNumber: '', accountType: 'Savings', balance: '' });\r\n          }}>Cancel</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={addNewBankAccount}\r\n            disabled={!newBankAccount.bankName || !newBankAccount.accountNumber || !newBankAccount.balance}\r\n          >\r\n            Add Bank Account\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* UPI App Addition Dialog */}\r\n      <Dialog open={upiDialogOpen} onClose={() => setUpiDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <Phone sx={{ color: '#2196f3', mr: 1 }} />\r\n            Add UPI App\r\n          </Box>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" sx={{ display: 'flex', flexDirection: 'column', gap: 2, mt: 2 }}>\r\n            <TextField\r\n              label=\"UPI App Name\"\r\n              value={newUPIApp.name}\r\n              onChange={(e) => setNewUPIApp({ ...newUPIApp, name: e.target.value })}\r\n              fullWidth\r\n              placeholder=\"e.g., PhonePe, Google Pay, Paytm\"\r\n            />\r\n            <TextField\r\n              label=\"UPI ID\"\r\n              value={newUPIApp.upiId}\r\n              onChange={(e) => setNewUPIApp({ ...newUPIApp, upiId: e.target.value })}\r\n              fullWidth\r\n              placeholder=\"e.g., yourname@phonepe, yourname@okaxis\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => {\r\n            setUpiDialogOpen(false);\r\n            setNewUPIApp({ name: '', upiId: '' });\r\n          }}>Cancel</Button>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={addNewUPIApp}\r\n            disabled={!newUPIApp.name || !newUPIApp.upiId}\r\n          >\r\n            Add UPI App\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["Dashboard","searchQuery","setSearchQuery","useState","filterOpen","setFilterOpen","voiceSearch","setVoiceSearch","isListening","setIsListening","selectedCategory","setSelectedCategory","localStorage","getItem","goalDialogOpen","setGoalDialogOpen","subscriptionMenuAnchor","setSubscriptionMenuAnchor","dateFilter","setDateFilter","amountRange","setAmountRange","JSON","parse","showAnomaliesOnly","setShowAnomaliesOnly","filteredTransactions","setFilteredTransactions","recognition","setRecognition","connectedBankAccounts","setConnectedBankAccounts","connectedUPIApps","setConnectedUPIApps","showSmartBudgetPopup","setShowSmartBudgetPopup","investments","setInvestments","portfolioValue","setPortfolioValue","portfolioGain","setPortfolioGain","goals","setGoals","savedGoals","id","name","saved","target","percentage","aiRecommendation","timeline","newGoal","setNewGoal","bankDialogOpen","setBankDialogOpen","newBankAccount","setNewBankAccount","bankName","accountNumber","accountType","balance","upiDialogOpen","setUpiDialogOpen","newUPIApp","setNewUPIApp","upiId","recentTransactions","setRecentTransactions","totalBalance","setTotalBalance","unreadCount","setUnreadCount","useEffect","savedBankAccounts","demoBankAccount","isConnected","lastSyncTime","Date","setItem","stringify","savedUPIApps","demoUPIApps","savedInvestments","demoInvestments","symbol","quantity","buyPrice","currentPrice","gain","savedTransactions","demoTransactions","description","amount","type","category","time","method","now","totalValue","reduce","sum","inv","totalGain","totalBankBalance","acc","stockUpdateInterval","setInterval","prevInvestments","updatedInvestments","map","priceChange","Math","random","newPrice","max","newGain","_objectSpread","round","transactionInterval","merchants","categories","amounts","newTransaction","floor","length","prev","updated","slice","clearInterval","totalSpent","abs","filter","t","totalIncome","totalTransactions","financialHealthScore","healthFactors","aiInsights","unusualSpending","comparison","personalizedTip","futureSpending","predicted","month","subscriptions","nextPayment","status","usage","upcomingBills","dueDate","handleConnectBankAccount","bankAccount","updatedAccounts","console","log","concat","handleConnectUPI","upiApp","find","app","updatedUPIApps","allTransactions","date","isAnomaly","React","window","recognitionInstance","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","transcript","results","onerror","alert","onend","filtered","toLowerCase","includes","toString","min","parseInt","resetFilters","getHealthScoreColor","score","_jsxs","Container","maxWidth","sx","py","children","Box","display","alignItems","justifyContent","mb","_jsx","Typography","variant","fontWeight","gap","TextField","placeholder","value","onChange","e","size","minWidth","InputProps","startAdornment","InputAdornment","position","Search","endAdornment","IconButton","onClick","handleVoiceSearch","start","color","disabled","CircularProgress","Mic","Badge","badgeContent","FilterList","Button","Card","bgcolor","border","CardContent","PsychologyAlt","mr","Chip","label","ml","gridTemplateColumns","xs","md","Alert","severity","borderRadius","toLocaleString","Speed","thickness","strokeLinecap","top","left","bottom","right","component","flex","gutterBottom","flexDirection","textAlign","sm","height","TrendingDown","TrendingUp","AccountBalance","Category","lg","EmojiEvents","startIcon","goal","index","toFixed","LinearProgress","Warning","transaction","anomaly","icon","mt","p","Assessment","borderColor","Smartphone","fontSize","cursor","transition","transform","boxShadow","Phone","unownedStocks","stock","some","stockToAdd","confirm","basePrice","newInvestment","NotificationsActive","px","Avatar","width","toLocaleTimeString","CheckCircle","Subscriptions","currentTarget","sub","CalendarMonth","bill","ReceiptLong","fullWidth","account","accountId","handleDisconnectBankAccount","title","flexWrap","investment","gainLoss","purchasePrice","gainLossPercent","sector","TrendingUpIcon","AddIcon","sampleInvestment","purchaseDate","toISOString","Dialog","open","onClose","DialogTitle","DialogContent","FormControl","InputLabel","Select","MenuItem","FormControlLabel","control","Switch","checked","DialogActions","applyFilters","addNewGoal","targetAmount","parseFloat","savedAmount","remainingAmount","monthlyRecommendation","timelineYears","ceil","timelineMonths","updatedGoals","Menu","anchorEl","Boolean","ListItemIcon","ListItemText","primary","Schedule","input","addNewBankAccount","replace","addNewUPIApp"],"sourceRoot":""}