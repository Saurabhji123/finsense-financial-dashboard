{"version":3,"file":"static/js/355.da5b66ce.chunk.js","mappings":"6QAIA,SAAeA,EAAAA,EAAAA,IAA2BC,EAAAA,EAAAA,KAAK,OAAQ,CACrDC,EAAG,oPACD,iB,kCCaJ,MA8KA,EA9K2BC,KACzB,MAAM,YAAEC,EAAW,kBAAEC,EAAiB,OAAEC,IAAWC,EAAAA,EAAAA,MAC5CC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAG5BK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,CACvCO,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,eAAe,KAGVC,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,CAC7Ca,MAAiB,OAAXnB,QAAW,IAAXA,OAAW,EAAXA,EAAamB,OAAQ,GAC3BC,OAAkB,OAAXpB,QAAW,IAAXA,OAAW,EAAXA,EAAaoB,QAAS,GAC7BC,aAAwB,OAAXrB,QAAW,IAAXA,OAAW,EAAXA,EAAaqB,cAAe,KAqBrCC,EAAsBA,CAACC,EAAiBC,KAC5CZ,EAAYa,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP,CAACF,GAAUC,MAYf,OACE3B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAS,CAACC,SAAS,KAAIC,UACtBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,GAAIJ,SAAA,EACjBhC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAACC,WAAW,OAAMT,SAAC,cAGvEhC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,QAAQ,QAAQI,MAAM,iBAAiBP,GAAI,CAAEQ,GAAI,GAAIX,SAAC,qDAIjEpB,IAASZ,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,SAAS,QAAQV,GAAI,CAAEQ,GAAI,GAAIX,SAAEpB,IACjDF,IAAWV,EAAAA,EAAAA,KAAC4C,EAAAA,EAAK,CAACC,SAAS,UAAUV,GAAI,CAAEQ,GAAI,GAAIX,SAAEtB,KAEtDuB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEW,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAIhB,SAAA,EAE5DC,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAACd,GAAI,CAAEe,EAAG,GAAIlB,SAAA,EAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACY,QAAQ,OAAOK,WAAW,SAASR,GAAI,EAAEX,SAAA,EAC5ChC,EAAAA,EAAAA,KAACoD,EAAa,CAACjB,GAAI,CAAEkB,GAAI,EAAGX,MAAO,mBACnC1C,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,4BAG3BC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEW,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAIhB,SAAA,EAC5DhC,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CACRC,MAAM,YACN5B,MAAOP,EAAYE,KACnBkC,SAAWC,GAAMpC,EAAeO,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEN,KAAMmC,EAAEC,OAAO/B,SACnEgC,WAAS,KAEX3D,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CACRC,MAAM,gBACN5B,MAAOP,EAAYG,MACnBqC,UAAQ,EACRD,WAAS,EACTE,WAAW,6BAEb7D,EAAAA,EAAAA,KAACsD,EAAAA,EAAS,CACRC,MAAM,eACN5B,MAAOP,EAAYI,YACnBgC,SAAWC,GAAMpC,EAAeO,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEJ,YAAaiC,EAAEC,OAAO/B,SAC1EgC,WAAS,KAEX3D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CACLxB,QAAQ,YACRyB,QA5EcC,UAC1BxD,GAAW,GACXK,EAAS,IACTF,EAAW,IAEX,UACQP,EAAkB,CACtBkB,KAAMF,EAAYE,KAClBE,YAAaJ,EAAYI,cAE3Bb,EAAW,gCACb,CAAE,MAAOsD,GACPpD,EAAS,8CACX,CAAC,QACCL,GAAW,EACb,GA8DYoD,SAAUrD,EACV4B,GAAI,CAAE+B,UAAW,aAAcC,GAAI,GAAInC,SACxC,0BAOLC,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAACd,GAAI,CAAEe,EAAG,GAAIlB,SAAA,EAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACY,QAAQ,OAAOK,WAAW,SAASR,GAAI,EAAEX,SAAA,EAC5ChC,EAAAA,EAAAA,KAACoE,EAAAA,EAAa,CAACjC,GAAI,CAAEkB,GAAI,EAAGX,MAAO,mBACnC1C,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,sBAG3BC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEW,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAIhB,SAAA,EAC5DhC,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,SACEtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,CACLC,QAAS1D,EAASE,cAClBwC,SAAWC,GAAMhC,EAAoB,gBAAiBgC,EAAEC,OAAOc,WAGnEjB,MAAM,wBAERvD,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,SACEtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,CACLC,QAAS1D,EAASG,YAClBuC,SAAWC,GAAMhC,EAAoB,cAAegC,EAAEC,OAAOc,WAGjEjB,MAAM,kBAERvD,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,SACEtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,CACLC,QAAS1D,EAASI,aAClBsC,SAAWC,GAAMhC,EAAoB,eAAgBgC,EAAEC,OAAOc,WAGlEjB,MAAM,mBAERvD,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,SACEtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,CACLC,QAAS1D,EAASK,cAClBqC,SAAWC,GAAMhC,EAAoB,gBAAiBgC,EAAEC,OAAOc,WAGnEjB,MAAM,0BAMZtB,EAAAA,EAAAA,MAACgB,EAAAA,EAAK,CAACd,GAAI,CAAEe,EAAG,GAAIlB,SAAA,EAClBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACY,QAAQ,OAAOK,WAAW,SAASR,GAAI,EAAEX,SAAA,EAC5ChC,EAAAA,EAAAA,KAACyE,EAAAA,EAAQ,CAACtC,GAAI,CAAEkB,GAAI,EAAGX,MAAO,mBAC9B1C,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACC,QAAQ,KAAIN,SAAC,yBAG3BC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEW,QAAS,OAAQE,IAAK,EAAG0B,SAAU,QAAS1C,SAAA,EACrDhC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CAACxB,QAAQ,WAAWI,MAAM,UAASV,SAAC,qBAG3ChC,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CAACxB,QAAQ,WAAWI,MAAM,QAAQqB,QAtHhCC,UACnB,UACQ3D,GACR,CAAE,MAAOO,GACPC,EAAS,sCACX,GAiHyEmB,SAAC,2B,yDClL9E,SAAejC,EAAAA,EAAAA,IAA2BC,EAAAA,EAAAA,KAAK,OAAQ,CACrDC,EAAG,sHACD,W,yDCFJ,SAAeF,EAAAA,EAAAA,IAA2BC,EAAAA,EAAAA,KAAK,OAAQ,CACrDC,EAAG,+JACD,gB","sources":["../node_modules/@mui/icons-material/esm/AccountCircle.js","pages/Settings-simple.tsx","../node_modules/@mui/icons-material/esm/Security.js","../node_modules/@mui/icons-material/esm/Notifications.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20\"\n}), 'AccountCircle');","import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  Switch,\r\n  FormControlLabel,\r\n  Alert,\r\n} from '@mui/material';\r\nimport {\r\n  AccountCircle,\r\n  Notifications,\r\n  Security,\r\n} from '@mui/icons-material';\r\nimport { useAuth } from '../services/authContext';\r\n\r\nconst Settings: React.FC = () => {\r\n  const { userProfile, updateUserProfile, logout } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // Settings state\r\n  const [settings, setSettings] = useState({\r\n    notifications: true,\r\n    emailAlerts: true,\r\n    budgetAlerts: true,\r\n    weeklyReports: false,\r\n  });\r\n\r\n  const [profileData, setProfileData] = useState({\r\n    name: userProfile?.name || '',\r\n    email: userProfile?.email || '',\r\n    phoneNumber: userProfile?.phoneNumber || ''\r\n  });\r\n\r\n  const handleProfileUpdate = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      await updateUserProfile({\r\n        name: profileData.name,\r\n        phoneNumber: profileData.phoneNumber\r\n      });\r\n      setSuccess('Profile updated successfully!');\r\n    } catch (err: any) {\r\n      setError('Failed to update profile. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSettingChange = (setting: string, value: boolean) => {\r\n    setSettings(prev => ({\r\n      ...prev,\r\n      [setting]: value\r\n    }));\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n      setError('Failed to logout. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box sx={{ py: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom fontWeight=\"bold\">\r\n          Settings\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 4 }}>\r\n          Manage your account preferences and app settings\r\n        </Typography>\r\n\r\n        {error && <Alert severity=\"error\" sx={{ mb: 3 }}>{error}</Alert>}\r\n        {success && <Alert severity=\"success\" sx={{ mb: 3 }}>{success}</Alert>}\r\n\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 4 }}>\r\n          {/* Profile Settings */}\r\n          <Paper sx={{ p: 3 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n              <AccountCircle sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h6\">Profile Information</Typography>\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n              <TextField\r\n                label=\"Full Name\"\r\n                value={profileData.name}\r\n                onChange={(e) => setProfileData(prev => ({ ...prev, name: e.target.value }))}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Email Address\"\r\n                value={profileData.email}\r\n                disabled\r\n                fullWidth\r\n                helperText=\"Email cannot be changed\"\r\n              />\r\n              <TextField\r\n                label=\"Phone Number\"\r\n                value={profileData.phoneNumber}\r\n                onChange={(e) => setProfileData(prev => ({ ...prev, phoneNumber: e.target.value }))}\r\n                fullWidth\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleProfileUpdate}\r\n                disabled={loading}\r\n                sx={{ alignSelf: 'flex-start', mt: 2 }}\r\n              >\r\n                Update Profile\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n\r\n          {/* Notification Settings */}\r\n          <Paper sx={{ p: 3 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n              <Notifications sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h6\">Notifications</Typography>\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={settings.notifications}\r\n                    onChange={(e) => handleSettingChange('notifications', e.target.checked)}\r\n                  />\r\n                }\r\n                label=\"Push Notifications\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={settings.emailAlerts}\r\n                    onChange={(e) => handleSettingChange('emailAlerts', e.target.checked)}\r\n                  />\r\n                }\r\n                label=\"Email Alerts\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={settings.budgetAlerts}\r\n                    onChange={(e) => handleSettingChange('budgetAlerts', e.target.checked)}\r\n                  />\r\n                }\r\n                label=\"Budget Alerts\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    checked={settings.weeklyReports}\r\n                    onChange={(e) => handleSettingChange('weeklyReports', e.target.checked)}\r\n                  />\r\n                }\r\n                label=\"Weekly Reports\"\r\n              />\r\n            </Box>\r\n          </Paper>\r\n\r\n          {/* Account Security */}\r\n          <Paper sx={{ p: 3 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n              <Security sx={{ mr: 2, color: 'primary.main' }} />\r\n              <Typography variant=\"h6\">Account Security</Typography>\r\n            </Box>\r\n            \r\n            <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                Change Password\r\n              </Button>\r\n              <Button variant=\"outlined\" color=\"error\" onClick={handleLogout}>\r\n                Sign Out\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11z\"\n}), 'Security');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2m6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1z\"\n}), 'Notifications');"],"names":["createSvgIcon","_jsx","d","Settings","userProfile","updateUserProfile","logout","useAuth","loading","setLoading","useState","success","setSuccess","error","setError","settings","setSettings","notifications","emailAlerts","budgetAlerts","weeklyReports","profileData","setProfileData","name","email","phoneNumber","handleSettingChange","setting","value","prev","_objectSpread","Container","maxWidth","children","_jsxs","Box","sx","py","Typography","variant","component","gutterBottom","fontWeight","color","mb","Alert","severity","display","flexDirection","gap","Paper","p","alignItems","AccountCircle","mr","TextField","label","onChange","e","target","fullWidth","disabled","helperText","Button","onClick","async","err","alignSelf","mt","Notifications","FormControlLabel","control","Switch","checked","Security","flexWrap"],"sourceRoot":""}