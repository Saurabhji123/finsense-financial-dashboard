{"version":3,"file":"static/js/928.dbfbc021.chunk.js","mappings":"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","sources":["components/InvestmentDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Button,\r\n  Avatar,\r\n  useTheme,\r\n  alpha,\r\n  Tab,\r\n  Tabs,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Stack,\r\n  Fab,\r\n  CircularProgress,\r\n  Fade,\r\n  Tooltip,\r\n  Slide,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Alert,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Refresh,\r\n  Add,\r\n  PieChart,\r\n  ShowChart,\r\n  AccountBalance,\r\n  Timeline,\r\n  BarChart,\r\n  Info,\r\n  Warning,\r\n  CheckCircle,\r\n  Assessment,\r\n  Savings,\r\n  MonetizationOn,\r\n  ArrowUpward,\r\n  ArrowDownward,\r\n  Business\r\n} from '@mui/icons-material';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip as ChartTooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  ArcElement,\r\n  BarElement,\r\n  Title,\r\n  ChartTooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\ninterface Investment {\r\n  id: string;\r\n  symbol: string;\r\n  name: string;\r\n  type: 'stocks' | 'mutual_funds' | 'bonds' | 'crypto';\r\n  quantity: number;\r\n  avgPrice: number;\r\n  currentPrice: number;\r\n  invested: number;\r\n  currentValue: number;\r\n  dayChange: number;\r\n  dayChangePercent: number;\r\n  totalReturn: number;\r\n  totalReturnPercent: number;\r\n  sector?: string;\r\n  logo?: string;\r\n}\r\n\r\ninterface MarketData {\r\n  index: string;\r\n  value: number;\r\n  change: number;\r\n  changePercent: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`investment-tabpanel-${index}`}\r\n      aria-labelledby={`investment-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InvestmentDashboard: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [loading, setLoading] = useState(true);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  // const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  \r\n  // Mock comprehensive investment data\r\n  const [investments] = useState<Investment[]>([\r\n    {\r\n      id: '1',\r\n      symbol: 'RELIANCE',\r\n      name: 'Reliance Industries Ltd',\r\n      type: 'stocks',\r\n      quantity: 25,\r\n      avgPrice: 2350,\r\n      currentPrice: 2425,\r\n      invested: 58750,\r\n      currentValue: 60625,\r\n      dayChange: 15,\r\n      dayChangePercent: 0.62,\r\n      totalReturn: 1875,\r\n      totalReturnPercent: 3.19,\r\n      sector: 'Energy'\r\n    },\r\n    {\r\n      id: '2',\r\n      symbol: 'TCS',\r\n      name: 'Tata Consultancy Services',\r\n      type: 'stocks',\r\n      quantity: 15,\r\n      avgPrice: 3680,\r\n      currentPrice: 3825,\r\n      invested: 55200,\r\n      currentValue: 57375,\r\n      dayChange: -25,\r\n      dayChangePercent: -0.65,\r\n      totalReturn: 2175,\r\n      totalReturnPercent: 3.94,\r\n      sector: 'IT'\r\n    },\r\n    {\r\n      id: '3',\r\n      symbol: 'AXIS_BLUECHIP',\r\n      name: 'Axis Bluechip Fund',\r\n      type: 'mutual_funds',\r\n      quantity: 850,\r\n      avgPrice: 45.2,\r\n      currentPrice: 48.7,\r\n      invested: 38420,\r\n      currentValue: 41395,\r\n      dayChange: 0.3,\r\n      dayChangePercent: 0.62,\r\n      totalReturn: 2975,\r\n      totalReturnPercent: 7.74,\r\n      sector: 'Large Cap'\r\n    },\r\n    {\r\n      id: '4',\r\n      symbol: 'HDFC_SMALLCAP',\r\n      name: 'HDFC Small Cap Fund',\r\n      type: 'mutual_funds',\r\n      quantity: 450,\r\n      avgPrice: 72.8,\r\n      currentPrice: 85.2,\r\n      invested: 32760,\r\n      currentValue: 38340,\r\n      dayChange: 1.2,\r\n      dayChangePercent: 1.43,\r\n      totalReturn: 5580,\r\n      totalReturnPercent: 17.03,\r\n      sector: 'Small Cap'\r\n    },\r\n    {\r\n      id: '5',\r\n      symbol: 'BITCOIN',\r\n      name: 'Bitcoin',\r\n      type: 'crypto',\r\n      quantity: 0.125,\r\n      avgPrice: 3200000,\r\n      currentPrice: 3450000,\r\n      invested: 40000,\r\n      currentValue: 43125,\r\n      dayChange: 25000,\r\n      dayChangePercent: 0.73,\r\n      totalReturn: 3125,\r\n      totalReturnPercent: 7.81,\r\n      sector: 'Cryptocurrency'\r\n    }\r\n  ]);\r\n\r\n  const marketData: MarketData[] = [\r\n    { index: 'NIFTY 50', value: 21850.20, change: 125.30, changePercent: 0.58 },\r\n    { index: 'SENSEX', value: 72240.15, change: 285.75, changePercent: 0.40 },\r\n    { index: 'NIFTY BANK', value: 46320.80, change: -145.60, changePercent: -0.31 },\r\n    { index: 'BITCOIN', value: 3450000, change: 25000, changePercent: 0.73 }\r\n  ];\r\n\r\n  // Calculate portfolio metrics\r\n  const totalInvested = investments.reduce((sum, inv) => sum + inv.invested, 0);\r\n  const totalCurrentValue = investments.reduce((sum, inv) => sum + inv.currentValue, 0);\r\n  const totalGainLoss = totalCurrentValue - totalInvested;\r\n  const totalGainLossPercent = (totalGainLoss / totalInvested) * 100;\r\n  const todayGainLoss = investments.reduce((sum, inv) => sum + (inv.dayChange * inv.quantity), 0);\r\n\r\n  // Portfolio allocation data for pie chart\r\n  const allocationData = {\r\n    labels: ['Stocks', 'Mutual Funds', 'Cryptocurrency', 'Bonds'],\r\n    datasets: [{\r\n      data: [\r\n        investments.filter(inv => inv.type === 'stocks').reduce((sum, inv) => sum + inv.currentValue, 0),\r\n        investments.filter(inv => inv.type === 'mutual_funds').reduce((sum, inv) => sum + inv.currentValue, 0),\r\n        investments.filter(inv => inv.type === 'crypto').reduce((sum, inv) => sum + inv.currentValue, 0),\r\n        0 // bonds\r\n      ],\r\n      backgroundColor: [\r\n        theme.palette.primary.main,\r\n        theme.palette.secondary.main,\r\n        theme.palette.warning.main,\r\n        theme.palette.success.main\r\n      ],\r\n      borderWidth: 3,\r\n      borderColor: theme.palette.background.paper,\r\n    }]\r\n  };\r\n\r\n  // Performance chart data\r\n  const performanceData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n    datasets: [{\r\n      label: 'Portfolio Value',\r\n      data: [180000, 185000, 192000, 188000, 195000, totalCurrentValue],\r\n      borderColor: theme.palette.primary.main,\r\n      backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n      tension: 0.4,\r\n      fill: true,\r\n      pointBackgroundColor: theme.palette.primary.main,\r\n      pointBorderColor: '#fff',\r\n      pointBorderWidth: 2,\r\n      pointRadius: 6,\r\n    }]\r\n  };\r\n\r\n  // Top gainers/losers data\r\n  const topGainers = investments\r\n    .filter(inv => inv.totalReturnPercent > 0)\r\n    .sort((a, b) => b.totalReturnPercent - a.totalReturnPercent)\r\n    .slice(0, 3);\r\n\r\n  // const topLosers = investments\r\n  //   .filter(inv => inv.totalReturnPercent < 0)\r\n  //   .sort((a, b) => a.totalReturnPercent - b.totalReturnPercent)\r\n  //   .slice(0, 3);\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      maximumFractionDigits: 0\r\n    }).format(amount);\r\n  };\r\n\r\n  const getTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'stocks': return <Timeline />;\r\n      case 'mutual_funds': return <PieChart />;\r\n      case 'crypto': return <MonetizationOn />;\r\n      case 'bonds': return <AccountBalance />;\r\n      default: return <Assessment />;\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    setRefreshing(false);\r\n    setAlertOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"60vh\" flexDirection=\"column\">\r\n          <CircularProgress size={80} thickness={4} />\r\n          <Typography variant=\"h6\" sx={{ mt: 2 }}>Loading your investment portfolio...</Typography>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\r\n      {/* Header */}\r\n      <Fade in timeout={800}>\r\n        <Box sx={{ mb: 4 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Box>\r\n              <Typography variant=\"h3\" fontWeight=\"bold\" sx={{ \r\n                background: `linear-gradient(45deg, ${theme.palette.primary.main}, ${theme.palette.secondary.main})`,\r\n                backgroundClip: 'text',\r\n                WebkitBackgroundClip: 'text',\r\n                WebkitTextFillColor: 'transparent',\r\n                mb: 1\r\n              }}>\r\n                Investment Portfolio 📈\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Track and manage your investments in one place\r\n              </Typography>\r\n            </Box>\r\n            \r\n            <Stack direction=\"row\" spacing={1}>\r\n              <Tooltip title=\"Refresh Data\">\r\n                <IconButton \r\n                  onClick={handleRefresh}\r\n                  disabled={refreshing}\r\n                  sx={{\r\n                    bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n                    animation: refreshing ? 'spin 1s linear infinite' : 'none',\r\n                    '@keyframes spin': {\r\n                      '0%': { transform: 'rotate(0deg)' },\r\n                      '100%': { transform: 'rotate(360deg)' }\r\n                    }\r\n                  }}\r\n                >\r\n                  <Refresh />\r\n                </IconButton>\r\n              </Tooltip>\r\n              \r\n              <Button \r\n                variant=\"contained\" \r\n                startIcon={<Add />}\r\n                onClick={() => {\r\n                  const symbol = prompt('Enter stock symbol (e.g., RELIANCE, TCS):');\r\n                  if (symbol) {\r\n                    const quantity = prompt('Enter quantity:');\r\n                    const price = prompt('Enter purchase price:');\r\n                    if (quantity && price) {\r\n                      alert(`Investment Added!\\n\\nStock: ${symbol}\\nQuantity: ${quantity}\\nPrice: ₹${price}\\n\\nThis would be saved to your portfolio.`);\r\n                    }\r\n                  }\r\n                }}\r\n                sx={{ borderRadius: 3 }}\r\n              >\r\n                Add Investment\r\n              </Button>\r\n            </Stack>\r\n          </Box>\r\n        </Box>\r\n      </Fade>\r\n\r\n      {/* Portfolio Summary Cards */}\r\n      <Slide direction=\"up\" in timeout={1000}>\r\n        <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', md: '1fr 1fr 1fr 1fr' }, gap: 3, mb: 4 }}>\r\n          {/* Total Portfolio Value */}\r\n          <Box>\r\n            <Card sx={{ \r\n              background: `linear-gradient(135deg, ${theme.palette.primary.main}, ${theme.palette.primary.dark})`,\r\n              color: 'white',\r\n              '&:hover': { transform: 'translateY(-4px)', transition: 'all 0.3s ease' }\r\n            }}>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.8, mb: 1 }}>\r\n                      Portfolio Value\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                      {formatCurrency(totalCurrentValue)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.9, mt: 1 }}>\r\n                      <TrendingUp sx={{ fontSize: 16, mr: 0.5 }} />\r\n                      +12.5% this month\r\n                    </Typography>\r\n                  </Box>\r\n                  <Avatar sx={{ bgcolor: alpha('#fff', 0.2), width: 60, height: 60 }}>\r\n                    <MonetizationOn fontSize=\"large\" />\r\n                  </Avatar>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Total Invested */}\r\n          <Box>\r\n            <Card sx={{ \r\n              background: `linear-gradient(135deg, ${theme.palette.secondary.main}, ${theme.palette.secondary.dark})`,\r\n              color: 'white',\r\n              '&:hover': { transform: 'translateY(-4px)', transition: 'all 0.3s ease' }\r\n            }}>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.8, mb: 1 }}>\r\n                      Total Invested\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                      {formatCurrency(totalInvested)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.9, mt: 1 }}>\r\n                      Across {investments.length} holdings\r\n                    </Typography>\r\n                  </Box>\r\n                  <Avatar sx={{ bgcolor: alpha('#fff', 0.2), width: 60, height: 60 }}>\r\n                    <Savings fontSize=\"large\" />\r\n                  </Avatar>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Total Gain/Loss */}\r\n          <Box>\r\n            <Card sx={{ \r\n              background: `linear-gradient(135deg, ${totalGainLoss >= 0 ? theme.palette.success.main : theme.palette.error.main}, ${totalGainLoss >= 0 ? theme.palette.success.dark : theme.palette.error.dark})`,\r\n              color: 'white',\r\n              '&:hover': { transform: 'translateY(-4px)', transition: 'all 0.3s ease' }\r\n            }}>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.8, mb: 1 }}>\r\n                      Total P&L\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                      {totalGainLoss >= 0 ? '+' : ''}{formatCurrency(totalGainLoss)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.9, mt: 1 }}>\r\n                      {totalGainLossPercent >= 0 ? '+' : ''}{totalGainLossPercent.toFixed(2)}% overall\r\n                    </Typography>\r\n                  </Box>\r\n                  <Avatar sx={{ bgcolor: alpha('#fff', 0.2), width: 60, height: 60 }}>\r\n                    {totalGainLoss >= 0 ? <TrendingUp fontSize=\"large\" /> : <TrendingDown fontSize=\"large\" />}\r\n                  </Avatar>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n\r\n          {/* Today's Change */}\r\n          <Box>\r\n            <Card sx={{ \r\n              background: `linear-gradient(135deg, ${theme.palette.info.main}, ${theme.palette.info.dark})`,\r\n              color: 'white',\r\n              '&:hover': { transform: 'translateY(-4px)', transition: 'all 0.3s ease' }\r\n            }}>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.8, mb: 1 }}>\r\n                      Today's Change\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                      {todayGainLoss >= 0 ? '+' : ''}{formatCurrency(todayGainLoss)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ opacity: 0.9, mt: 1 }}>\r\n                      {todayGainLoss >= 0 ? <ArrowUpward sx={{ fontSize: 16, mr: 0.5 }} /> : <ArrowDownward sx={{ fontSize: 16, mr: 0.5 }} />}\r\n                      Day's performance\r\n                    </Typography>\r\n                  </Box>\r\n                  <Avatar sx={{ bgcolor: alpha('#fff', 0.2), width: 60, height: 60 }}>\r\n                    <Timeline fontSize=\"large\" />\r\n                  </Avatar>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Box>\r\n        </Box>\r\n      </Slide>\r\n\r\n      {/* Market Overview */}\r\n      <Fade in timeout={1200}>\r\n        <Card sx={{ mb: 4 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" fontWeight=\"bold\" gutterBottom>\r\n              📊 Market Overview\r\n            </Typography>\r\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr 1fr', md: '1fr 1fr 1fr 1fr' }, gap: 2 }}>\r\n              {marketData.map((market, index) => (\r\n                <Box key={market.index}>\r\n                  <Box sx={{ textAlign: 'center', p: 2, bgcolor: alpha(theme.palette.primary.main, 0.05), borderRadius: 2 }}>\r\n                    <Typography variant=\"subtitle2\" fontWeight=\"bold\" color=\"primary\">\r\n                      {market.index}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                      {market.index === 'BITCOIN' ? formatCurrency(market.value) : market.value.toLocaleString()}\r\n                    </Typography>\r\n                    <Chip\r\n                      label={`${market.change >= 0 ? '+' : ''}${market.changePercent.toFixed(2)}%`}\r\n                      color={market.change >= 0 ? 'success' : 'error'}\r\n                      size=\"small\"\r\n                      icon={market.change >= 0 ? <TrendingUp /> : <TrendingDown />}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Fade>\r\n\r\n      {/* Tabs for detailed views */}\r\n      <Card sx={{ mb: 4 }}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\">\r\n            <Tab label=\"Holdings\" icon={<PieChart />} />\r\n            <Tab label=\"Analytics\" icon={<BarChart />} />\r\n            <Tab label=\"Market Trends\" icon={<ShowChart />} />\r\n          </Tabs>\r\n        </Box>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n          {/* Holdings Tab */}\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Investment</TableCell>\r\n                  <TableCell align=\"right\">Qty</TableCell>\r\n                  <TableCell align=\"right\">Avg Price</TableCell>\r\n                  <TableCell align=\"right\">Current Price</TableCell>\r\n                  <TableCell align=\"right\">Invested</TableCell>\r\n                  <TableCell align=\"right\">Current Value</TableCell>\r\n                  <TableCell align=\"right\">P&L</TableCell>\r\n                  <TableCell align=\"right\">Day Change</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {investments.map((investment) => (\r\n                  <TableRow key={investment.id} hover>\r\n                    <TableCell>\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar sx={{ mr: 2, bgcolor: alpha(theme.palette.primary.main, 0.1) }}>\r\n                          {getTypeIcon(investment.type)}\r\n                        </Avatar>\r\n                        <Box>\r\n                          <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                            {investment.symbol}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {investment.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">{investment.quantity}</TableCell>\r\n                    <TableCell align=\"right\">{formatCurrency(investment.avgPrice)}</TableCell>\r\n                    <TableCell align=\"right\">{formatCurrency(investment.currentPrice)}</TableCell>\r\n                    <TableCell align=\"right\">{formatCurrency(investment.invested)}</TableCell>\r\n                    <TableCell align=\"right\">{formatCurrency(investment.currentValue)}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Typography color={investment.totalReturn >= 0 ? 'success.main' : 'error.main'} fontWeight=\"bold\">\r\n                        {investment.totalReturn >= 0 ? '+' : ''}{formatCurrency(investment.totalReturn)}\r\n                        <br />\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                          ({investment.totalReturnPercent >= 0 ? '+' : ''}{investment.totalReturnPercent.toFixed(2)}%)\r\n                        </Typography>\r\n                      </Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Chip\r\n                        label={`${investment.dayChangePercent >= 0 ? '+' : ''}${investment.dayChangePercent.toFixed(2)}%`}\r\n                        color={investment.dayChangePercent >= 0 ? 'success' : 'error'}\r\n                        size=\"small\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n          {/* Analytics Tab */}\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' }, gap: 3 }}>\r\n            <Box>\r\n              <Paper sx={{ p: 3, height: 400 }}>\r\n                <Typography variant=\"h6\" gutterBottom>Portfolio Allocation</Typography>\r\n                <Box sx={{ height: 300, display: 'flex', justifyContent: 'center' }}>\r\n                  <Doughnut \r\n                    data={allocationData}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      plugins: {\r\n                        legend: {\r\n                          position: 'bottom',\r\n                          labels: { usePointStyle: true, padding: 15 }\r\n                        }\r\n                      },\r\n                      cutout: '60%'\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n            \r\n            <Box>\r\n              <Paper sx={{ p: 3, height: 400 }}>\r\n                <Typography variant=\"h6\" gutterBottom>Performance Timeline</Typography>\r\n                <Box sx={{ height: 300 }}>\r\n                  <Line \r\n                    data={performanceData}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      plugins: { legend: { display: false } },\r\n                      scales: {\r\n                        y: {\r\n                          beginAtZero: false,\r\n                          ticks: {\r\n                            callback: function(value) {\r\n                              return '₹' + (value as number / 1000) + 'K';\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom color=\"success.main\">\r\n                  🚀 Top Performers\r\n                </Typography>\r\n                <List>\r\n                  {topGainers.map((investment) => (\r\n                    <ListItem key={investment.id}>\r\n                      <ListItemIcon>{getTypeIcon(investment.type)}</ListItemIcon>\r\n                      <ListItemText\r\n                        primary={investment.symbol}\r\n                        secondary={investment.name}\r\n                      />\r\n                      <Typography variant=\"h6\" color=\"success.main\" fontWeight=\"bold\">\r\n                        +{investment.totalReturnPercent.toFixed(2)}%\r\n                      </Typography>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Paper>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  📈 Investment Insights\r\n                </Typography>\r\n                <Stack spacing={2}>\r\n                  <Alert severity=\"success\" icon={<CheckCircle />}>\r\n                    <strong>Great diversification!</strong> Your portfolio is well-balanced across different asset classes.\r\n                  </Alert>\r\n                  <Alert severity=\"info\" icon={<Info />}>\r\n                    <strong>Market outlook:</strong> Small cap funds are performing exceptionally well this quarter.\r\n                  </Alert>\r\n                  <Alert severity=\"warning\" icon={<Warning />}>\r\n                    <strong>Rebalancing tip:</strong> Consider booking profits in crypto and increasing equity allocation.\r\n                  </Alert>\r\n                </Stack>\r\n              </Paper>\r\n            </Box>\r\n          </Box>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={2}>\r\n          {/* Market Trends Tab */}\r\n          <Box sx={{ display: 'grid', gridTemplateColumns: '1fr', gap: 3 }}>\r\n            <Box>\r\n              <Paper sx={{ p: 3 }}>\r\n                <Typography variant=\"h6\" gutterBottom>📈 Sector Performance</Typography>\r\n                <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: 'repeat(5, 1fr)' }, gap: 2 }}>\r\n                  {['Technology', 'Banking', 'Energy', 'Healthcare', 'Consumer'].map((sector, index) => {\r\n                    const change = [2.5, -0.8, 1.2, 3.1, -1.5][index];\r\n                    return (\r\n                      <Box key={sector}>\r\n                        <Box sx={{ \r\n                          p: 2, \r\n                          textAlign: 'center', \r\n                          bgcolor: alpha(change >= 0 ? theme.palette.success.main : theme.palette.error.main, 0.1),\r\n                          borderRadius: 2,\r\n                          border: 1,\r\n                          borderColor: change >= 0 ? 'success.main' : 'error.main'\r\n                        }}>\r\n                          <Typography variant=\"subtitle1\" fontWeight=\"bold\">{sector}</Typography>\r\n                          <Typography variant=\"h5\" color={change >= 0 ? 'success.main' : 'error.main'} fontWeight=\"bold\">\r\n                            {change >= 0 ? '+' : ''}{change}%\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    );\r\n                  })}\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n\r\n            <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '2fr 1fr' }, gap: 3 }}>\r\n              <Box>\r\n              <Paper sx={{ p: 3, height: 400 }}>\r\n                <Typography variant=\"h6\" gutterBottom>Market Trend Analysis</Typography>\r\n                <Box sx={{ height: 300 }}>\r\n                  <Line \r\n                    data={{\r\n                      labels: ['1M', '3M', '6M', '1Y', '2Y', '5Y'],\r\n                      datasets: [\r\n                        {\r\n                          label: 'NIFTY 50',\r\n                          data: [18500, 19200, 20100, 21850, 19800, 15600],\r\n                          borderColor: theme.palette.primary.main,\r\n                          backgroundColor: alpha(theme.palette.primary.main, 0.1),\r\n                        },\r\n                        {\r\n                          label: 'Your Portfolio',\r\n                          data: [165000, 175000, 185000, 200000, 182000, 140000],\r\n                          borderColor: theme.palette.secondary.main,\r\n                          backgroundColor: alpha(theme.palette.secondary.main, 0.1),\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={{\r\n                      responsive: true,\r\n                      maintainAspectRatio: false,\r\n                      plugins: {\r\n                        legend: { position: 'top' }\r\n                      }\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Paper>\r\n              </Box>\r\n\r\n              <Box>\r\n              <Paper sx={{ p: 3, height: 400 }}>\r\n                <Typography variant=\"h6\" gutterBottom>🔥 Trending Stocks</Typography>\r\n                <List>\r\n                  {[\r\n                    { name: 'ADANIENT', change: 8.5 },\r\n                    { name: 'BAJFINANCE', change: 5.2 },\r\n                    { name: 'TECHM', change: 4.8 },\r\n                    { name: 'WIPRO', change: -2.1 },\r\n                    { name: 'SBIN', change: -1.8 }\r\n                  ].map((stock, index) => (\r\n                    <ListItem key={stock.name}>\r\n                      <ListItemIcon>\r\n                        <Business color={stock.change >= 0 ? 'success' : 'error'} />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={stock.name} />\r\n                      <Chip\r\n                        label={`${stock.change >= 0 ? '+' : ''}${stock.change}%`}\r\n                        color={stock.change >= 0 ? 'success' : 'error'}\r\n                        size=\"small\"\r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              </Paper>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </TabPanel>\r\n      </Card>\r\n\r\n      {/* Floating Action Button */}\r\n      <Fab \r\n        color=\"primary\" \r\n        sx={{ position: 'fixed', bottom: 24, right: 24 }}\r\n        onClick={() => {\r\n          const symbol = prompt('🚀 Quick Add Investment\\n\\nEnter stock symbol (e.g., RELIANCE, TCS, HDFC):');\r\n          if (symbol) {\r\n            const quantity = prompt(`📊 Adding ${symbol.toUpperCase()}\\n\\nEnter quantity:`);\r\n            if (quantity && !isNaN(Number(quantity))) {\r\n              const price = prompt(`💰 ${symbol.toUpperCase()} - ${quantity} shares\\n\\nEnter purchase price per share (₹):`);\r\n              if (price && !isNaN(Number(price))) {\r\n                const totalAmount = Number(quantity) * Number(price);\r\n                const confirmed = window.confirm(`✅ Confirm Investment\\n\\nStock: ${symbol.toUpperCase()}\\nQuantity: ${quantity} shares\\nPrice: ₹${price} per share\\nTotal Investment: ₹${totalAmount.toLocaleString()}\\n\\nAdd to portfolio?`);\r\n                if (confirmed) {\r\n                  alert(`🎉 Investment Added!\\n\\n${symbol.toUpperCase()} (${quantity} shares @ ₹${price}) has been added to your portfolio!\\n\\nTotal investment: ₹${totalAmount.toLocaleString()}`);\r\n                  setAlertOpen(true);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <Add />\r\n      </Fab>\r\n\r\n      {/* Success Snackbar */}\r\n      <Snackbar\r\n        open={alertOpen}\r\n        autoHideDuration={4000}\r\n        onClose={() => setAlertOpen(false)}\r\n        message=\"Investment added successfully! � Your portfolio has been updated.\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InvestmentDashboard;"],"names":["TabPanel","props","children","value","index","other","_objectWithoutProperties","_excluded","_jsx","_objectSpread","role","hidden","id","concat","Box","sx","p","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","ArcElement","BarElement","Title","ChartTooltip","Legend","Filler","InvestmentDashboard","theme","useTheme","loading","setLoading","useState","tabValue","setTabValue","alertOpen","setAlertOpen","refreshing","setRefreshing","investments","symbol","name","type","quantity","avgPrice","currentPrice","invested","currentValue","dayChange","dayChangePercent","totalReturn","totalReturnPercent","sector","totalInvested","reduce","sum","inv","totalCurrentValue","totalGainLoss","totalGainLossPercent","todayGainLoss","allocationData","labels","datasets","data","filter","backgroundColor","palette","primary","main","secondary","warning","success","borderWidth","borderColor","background","paper","performanceData","label","alpha","tension","fill","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","topGainers","sort","a","b","slice","formatCurrency","amount","Intl","NumberFormat","style","currency","maximumFractionDigits","format","getTypeIcon","Timeline","PieChart","MonetizationOn","AccountBalance","Assessment","useEffect","timer","setTimeout","clearTimeout","Container","maxWidth","py","_jsxs","display","justifyContent","alignItems","minHeight","flexDirection","CircularProgress","size","thickness","Typography","variant","mt","Fade","in","timeout","mb","fontWeight","backgroundClip","WebkitBackgroundClip","WebkitTextFillColor","color","Stack","direction","spacing","Tooltip","title","IconButton","onClick","async","Promise","resolve","disabled","bgcolor","animation","transform","Refresh","Button","startIcon","Add","prompt","price","alert","borderRadius","Slide","gridTemplateColumns","xs","sm","md","gap","Card","dark","transition","CardContent","opacity","TrendingUp","fontSize","mr","Avatar","width","height","length","Savings","error","toFixed","TrendingDown","info","ArrowUpward","ArrowDownward","gutterBottom","change","changePercent","map","market","textAlign","toLocaleString","Chip","icon","borderBottom","Tabs","onChange","handleTabChange","event","newValue","Tab","BarChart","ShowChart","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","investment","hover","component","Paper","Doughnut","options","responsive","maintainAspectRatio","plugins","legend","position","usePointStyle","padding","cutout","Line","scales","y","beginAtZero","ticks","callback","List","ListItem","ListItemIcon","ListItemText","Alert","severity","CheckCircle","Info","Warning","border","stock","Business","Fab","bottom","right","toUpperCase","isNaN","Number","totalAmount","window","confirm","Snackbar","open","autoHideDuration","onClose","message"],"sourceRoot":""}